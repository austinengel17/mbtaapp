{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport { Line, Chart } from 'react-chartjs-2';\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Red\";\nvar mbtaStopsEndpoint = \"/stops/line/Red\";\nfunction Map() {\n  _s();\n  console.log(\"#80\");\n  const bostonBoundaries = {\n    \"westernBoundary\": -71.1638,\n    \"easternBoundary\": -71.0337,\n    \"southernBoundary\": 42.3223,\n    \"northernBoundary\": 42.4082\n  };\n  var longitudeRange = bostonBoundaries[westernBoundary] - bostonBoundaries[easternBoundary];\n  var latitudeRange = bostonBoundaries[northernBoundary] - bostonBoundaries[southernBoundary];\n  function createSVGMap() {\n    console.log(\"#2\");\n    addStops();\n  }\n  const [event, setEvent] = useState(\"hi\");\n  //Load stops here\n  //Load lines here\n\n  //Load vehicles below\n  // useEffect(() => {\n  //   const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n  //   evtSource.onmessage = (data) => {\n  //     setEvent(data.data);\n  //   };\n  //   evtSource.onerror = function (error) {\n  //     console.error('EventSource error:', error);\n  //   };\n  //   //close out event subscription on close of component\n  // },[]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"1000\",\n      width: \"1000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), createSVGMap(), console.log(\"#3\"), \"        \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"a9TXpawgF4Cv/jHtTFUxe4fbXtk=\");\n_c = Map;\nfunction addStops() {\n  let xhr = new XMLHttpRequest();\n\n  // Making our connection \n  var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  xhr.open(\"GET\", url, true);\n\n  // function execute after request is successful\n  xhr.onreadystatechange = function () {\n    if (this.readyState == 4 && this.status == 200) {\n      console.log(JSON.parse(this.responseText));\n      // this.responseText\n      var temp = JSON.parse(this.responseText);\n      var stationData = Object.keys(temp).map(v => ({\n        [v.replace(/['\"]+/g, '')]: {\n          ...temp[v]\n        }\n      }));\n      console.log(stationData);\n      var svg = d3.select(\"svg\");\n      var stopGroup = svg.selectAll(\"g\").data(stationData).enter().append(\"g\").attr(\"transform\", function (d, i) {\n        console.log(d);\n        return \"translate(\" + (10 + i * 130) + \", \" + 150 + \")\";\n      });\n      stopGroup.append(\"circle\").attr(\"cx\", 30).attr(\"cy\", 0).attr(\"r\", 10).attr(\"fill\", \"red\");\n      stopGroup.append(\"text\").text(function (d) {\n        console.log(d);\n        return d[Object.keys(d)[0]].name;\n      }).attr(\"width\", 100).attr(\"x\", 30) // Set the x-coordinate\n      .attr(\"y\", 20).attr(\"text-anchor\", \"middle\");\n      console.log(\"hellohi\");\n    }\n  };\n  xhr.onerror = function (error) {\n    console.error(error);\n  };\n  xhr.send();\n  console.log(\"sent\");\n}\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["Line","Chart","useState","useEffect","d3","jsxDEV","_jsxDEV","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","Map","_s","console","log","bostonBoundaries","longitudeRange","westernBoundary","easternBoundary","latitudeRange","northernBoundary","southernBoundary","createSVGMap","addStops","event","setEvent","className","children","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","xhr","XMLHttpRequest","url","open","onreadystatechange","readyState","status","JSON","parse","responseText","temp","stationData","Object","keys","map","v","replace","svg","select","stopGroup","selectAll","data","enter","append","attr","d","i","text","name","onerror","error","send","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import { Line, Chart } from 'react-chartjs-2';\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Red\";\nvar mbtaStopsEndpoint = \"/stops/line/Red\"\nfunction Map() {    console.log(\"#80\");\n\n    const bostonBoundaries = {\n      \"westernBoundary\" : -71.1638,\n      \"easternBoundary\" : -71.0337,\n      \"southernBoundary\" : 42.3223,\n      \"northernBoundary\" : 42.4082\n    };\n\n    var longitudeRange = bostonBoundaries[westernBoundary] - bostonBoundaries[easternBoundary];\n    var latitudeRange = bostonBoundaries[northernBoundary] - bostonBoundaries[southernBoundary];\n\n    function createSVGMap(){\n    console.log(\"#2\");\n      addStops();\n    }\n\n    const[event, setEvent] = useState(\"hi\");\n    //Load stops here\n    //Load lines here\n\n    //Load vehicles below\n    // useEffect(() => {\n    //   const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n    //   evtSource.onmessage = (data) => {\n    //     setEvent(data.data);\n    //   };\n    //   evtSource.onerror = function (error) {\n    //     console.error('EventSource error:', error);\n    //   };\n    //   //close out event subscription on close of component\n    // },[]);\n\n      return (\n        <div className=\"Map\">\n          <svg height=\"1000\" width=\"1000\"></svg>\n          {createSVGMap()}\n          {console.log(\"#3\")}\n{/*          <h1>Recent Event is {event}</h1>\n*/}        </div> \n      );\n}\nfunction addStops(){\n  let xhr = new XMLHttpRequest();\n \n    // Making our connection \n    var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n    xhr.open(\"GET\", url, true);\n \n    // function execute after request is successful\n    xhr.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n            console.log(JSON.parse(this.responseText));\n            // this.responseText\n            var temp = JSON.parse(this.responseText);\n            var stationData = Object.keys(temp).map(v => ({[v.replace(/['\"]+/g, '')]: {...temp[v]}}));\n\n            console.log(stationData);\n            var svg = d3.select(\"svg\");\n            var stopGroup = svg.selectAll(\"g\")\n            .data(stationData)\n            .enter()\n            .append(\"g\")\n            .attr(\"transform\", function(d, i) { console.log(d); return \"translate(\" + (10 + i * 130) + \", \" + 150 + \")\"; });\n            stopGroup.append(\"circle\")\n              .attr(\"cx\", 30)\n              .attr(\"cy\", 0)\n              .attr(\"r\", 10)\n              .attr(\"fill\", \"red\");\n\n             stopGroup.append(\"text\")\n                .text(function(d) {\n                  console.log(d);\n                  return d[Object.keys(d)[0]].name;})\n                .attr(\"width\", 100)\n                .attr(\"x\", 30) // Set the x-coordinate\n                .attr(\"y\", 20)\n                .attr(\"text-anchor\", \"middle\");\n\n                console.log(\"hellohi\")\n        }\n      }\n    xhr.onerror = function (error){\n      console.error(error);\n    };\n    xhr.send();\n    console.log(\"sent\");\n}\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}