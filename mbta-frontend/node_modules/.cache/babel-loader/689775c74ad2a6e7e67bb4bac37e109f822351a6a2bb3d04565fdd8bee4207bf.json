{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nconst svg = d3.select(\"svg\");\nfunction Vehicles() {\n  _s();\n  console.log(\"#80\");\n  const [event, setEvent] = useState(\"hi\");\n  const [vehicleList, setVehicleList] = useState([]);\n  useEffect(() => {\n    console.log(vehicleList);\n    addVehicles(vehicleList);\n  }, [vehicleList]);\n\n  //Load vehicles below\n  useEffect(() => {\n    const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n    evtSource.onmessage = data => {\n      var eventData = JSON.parse(data.data);\n      var vehicleData = eventData.vehicleData;\n      // if(eventData.event == \"reset\"){\n      //   console.log(\"reset\");\n      //   setVehicleList(vehicleData);\n      //   addVehicles(vehicleList);\n      // }\n      // if(eventData.event == \"update\"){\n      //   console.log(\"update\");\n      //   if(!!vehicleList.find((vehicle) => vehicle.id === vehicleData[0].id)){\n      //     setVehicleList((prevList) => [...prevList, vehicleData[0]]);\n      //   }\n      //   else {\n      //     console.log(\"update .. \", vehicleData[0]);\n      //     setVehicleList((prevList) =>\n      //       prevList.map((vehicle) => {\n      //         if (vehicle.id === vehicleData[0].id) {\n      //           return {...vehicle, ...vehicleData[0]};\n      //         }\n      //         return vehicle;\n      //      })\n      //     );\n      //   }\n      // }\n      setVehicleList(vehicleData);\n    };\n    evtSource.onerror = function (error) {\n      console.error('EventSource error:', error);\n    };\n    //close out event subscription on close of component\n    return () => {\n      evtSource.close();\n    };\n  }, []);\n}\n_s(Vehicles, \"uKscnT5PoytvBVLLJaIyEHsTxlw=\");\n_c = Vehicles;\nfunction addVehicles(vehicleList) {\n  console.log(\"add vehicles .\", vehicleList);\n  var vehicleGroup = svg.selectAll(\"g.vehicle-group\").data(vehicleList, d => d.id).join(enter => {\n    var groupEnter = enter.append(\"g\").attr(\"class\", \"vehicle-group\").attr(\"transform\", (d, i) => `translate(${10 + i * 40}, 0)`);\n    groupEnter.append(\"rect\").attr(\"x\", 0).attr(\"y\", 400).attr(\"width\", 10).attr(\"height\", 10).attr(\"class\", \"vehicle\").attr(\"id\", d => d.id);\n    groupEnter.append(\"text\").text(d => d.id).attr(\"width\", 100).attr(\"x\", 0).attr(\"y\", 450).attr(\"text-anchor\", \"middle\").attr(\"font-size\", 5);\n    groupEnter.append(\"text\").text(d => d.currentStatus).attr(\"width\", 100).attr(\"x\", 0).attr(\"y\", 460).attr(\"text-anchor\", \"middle\").attr(\"font-size\", 5).attr(\"class\", \"current-status\");\n  }, update => {\n    update.select(\"rect.vehicle\").attr(\"class\", \"updated\");\n  }, exit => {\n    exit.remove();\n  });\n}\nexport default Vehicles;\nvar _c;\n$RefreshReg$(_c, \"Vehicles\");","map":{"version":3,"names":["useState","useEffect","d3","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","svg","select","Vehicles","_s","console","log","event","setEvent","vehicleList","setVehicleList","addVehicles","evtSource","EventSource","onmessage","data","eventData","JSON","parse","vehicleData","onerror","error","close","_c","vehicleGroup","selectAll","d","id","join","enter","groupEnter","append","attr","i","text","currentStatus","update","exit","remove","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Vehicles.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nconst svg = d3.select(\"svg\");\n\nfunction Vehicles() {    console.log(\"#80\");\n    const[event, setEvent] = useState(\"hi\");\n    const [vehicleList, setVehicleList] = useState([]);\n\n useEffect(() => {\n      console.log(vehicleList);\n      addVehicles(vehicleList);\n  }, [vehicleList]);\n\n    //Load vehicles below\n    useEffect(() => {\n      const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n      evtSource.onmessage = (data) => {\n        var eventData = JSON.parse(data.data);\n        var vehicleData = eventData.vehicleData;\n        // if(eventData.event == \"reset\"){\n        //   console.log(\"reset\");\n        //   setVehicleList(vehicleData);\n        //   addVehicles(vehicleList);\n        // }\n        // if(eventData.event == \"update\"){\n        //   console.log(\"update\");\n        //   if(!!vehicleList.find((vehicle) => vehicle.id === vehicleData[0].id)){\n        //     setVehicleList((prevList) => [...prevList, vehicleData[0]]);\n        //   }\n        //   else {\n        //     console.log(\"update .. \", vehicleData[0]);\n        //     setVehicleList((prevList) =>\n        //       prevList.map((vehicle) => {\n        //         if (vehicle.id === vehicleData[0].id) {\n        //           return {...vehicle, ...vehicleData[0]};\n        //         }\n        //         return vehicle;\n        //      })\n        //     );\n        //   }\n        // }\n        setVehicleList(vehicleData);\n      };\n      evtSource.onerror = function (error) {\n        console.error('EventSource error:', error);\n      };\n      //close out event subscription on close of component\n      return () => {\n        evtSource.close();\n      };\n    },[]);\n\n}\n\n\nfunction addVehicles(vehicleList){\n  console.log(\"add vehicles .\", vehicleList);\n   var vehicleGroup = svg\n    .selectAll(\"g.vehicle-group\")\n    .data(vehicleList, (d) => d.id)\n    .join(\n      (enter) => {\n        var groupEnter = enter\n          .append(\"g\")\n          .attr(\"class\", \"vehicle-group\")\n          .attr(\"transform\", (d, i) => `translate(${10 + i * 40}, 0)`);\n\n        groupEnter\n          .append(\"rect\")\n          .attr(\"x\", 0)\n          .attr(\"y\", 400)\n          .attr(\"width\", 10)\n          .attr(\"height\", 10)\n          .attr(\"class\", \"vehicle\")\n          .attr(\"id\", (d) => d.id);\n\n        groupEnter\n          .append(\"text\")\n          .text((d) => d.id)\n          .attr(\"width\", 100)\n          .attr(\"x\", 0)\n          .attr(\"y\", 450)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", 5);\n\n        groupEnter\n          .append(\"text\")\n          .text((d) => d.currentStatus)\n          .attr(\"width\", 100)\n          .attr(\"x\", 0)\n          .attr(\"y\", 460)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", 5)\n          .attr(\"class\", \"current-status\");\n      },\n      (update) => {\n        update.select(\"rect.vehicle\").attr(\"class\", \"updated\");\n      },\n      (exit) => {\n        exit.remove();\n      }\n    );\n}\n\nexport default Vehicles;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}