{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\";\nimport Chart from \"chart.js/auto\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  const coordinates = [{\n    lat: 42.39674,\n    long: -71.12181\n  }, {\n    lat: 42.3884,\n    long: -71.119149\n  }];\n  const canvas = document.getElementById('myChart');\n  const config = {\n    type: 'line',\n    // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\n    data: coordinates.map(_ref => {\n      let {\n        lat,\n        long\n      } = _ref;\n      return {\n        x: long,\n        y: lat\n      };\n    }),\n    // you can set indiviual colors for each bar\n    backgroundColor: ['rgba(255, 255, 255, 0.6)', 'rgba(255, 255, 255, 0.6)', 'rgba(255, 255, 255, 0.6)'],\n    borderWidth: 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["Chart","React","useState","jsxDEV","_jsxDEV","Map","coordinates","lat","long","canvas","document","getElementById","config","type","data","map","_ref","x","y","backgroundColor","borderWidth","className","children","Line","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import Chart from \"chart.js/auto\";\nimport React, { useState } from 'react';\n\nfunction Map() {\n    const coordinates = [\n      { lat: 42.39674, long: -71.12181 },\n      { lat: 42.3884, long: -71.119149 }\n    ]\n\n    const canvas = document.getElementById('myChart');\n\n    const config = {\n        type: 'line',\n        // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\n        data: coordinates.map((({lat, long}) => ({x: long, y: lat}))),\n        // you can set indiviual colors for each bar\n        backgroundColor: [\n          'rgba(255, 255, 255, 0.6)',\n          'rgba(255, 255, 255, 0.6)',\n          'rgba(255, 255, 255, 0.6)',\n        ],\n        borderWidth: 1\n      }\n      return (\n        <div className=\"Map\">\n          <Line data={config} />\n        </div> \n      );\n}\n\nexport default Map;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EACX,MAAMC,WAAW,GAAG,CAClB;IAAEC,GAAG,EAAE,QAAQ;IAAEC,IAAI,EAAE,CAAC;EAAS,CAAC,EAClC;IAAED,GAAG,EAAE,OAAO;IAAEC,IAAI,EAAE,CAAC;EAAU,CAAC,CACnC;EAED,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;EAEjD,MAAMC,MAAM,GAAG;IACXC,IAAI,EAAE,MAAM;IACZ;IACAC,IAAI,EAAER,WAAW,CAACS,GAAG,CAAEC,IAAA;MAAA,IAAC;QAACT,GAAG;QAAEC;MAAI,CAAC,GAAAQ,IAAA;MAAA,OAAM;QAACC,CAAC,EAAET,IAAI;QAAEU,CAAC,EAAEX;MAAG,CAAC;IAAA,CAAE,CAAC;IAC7D;IACAY,eAAe,EAAE,CACf,0BAA0B,EAC1B,0BAA0B,EAC1B,0BAA0B,CAC3B;IACDC,WAAW,EAAE;EACf,CAAC;EACD,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA,CAACmB,IAAI;MAACT,IAAI,EAAEF;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEd;AAACC,EAAA,GAzBQvB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}