{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nfunction Vehicles(_ref) {\n  _s();\n  let {\n    svgRef\n  } = _ref;\n  const [vehicleList, setVehicleList] = useState([]);\n  useEffect(() => {\n    const svg = svgRef.current;\n    var svgElement = d3.select(svg);\n    console.log(\"vdata \", vehicleList);\n    svgElement.selectAll(\"text.vehicle\").data(vehicleList, d => d.id).join(enter => {\n      enter.append(\"text\").attr(\"class\", \"vehicle\")\n      // .attr(\"key\", d=>d.id)\n      .attr(\"x\", function (d, i) {\n        return 30 + i * 40;\n      }).attr(\"y\", 300).attr(\"font-size\", 5).text(d => d.currentStatus);\n    }, update => {\n      update.attr(\"x\", function (d, i) {\n        return 30 + i * 40;\n      });\n    }, exit => {\n      exit.remove();\n    });\n  }, [vehicleList]);\n\n  //Load vehicles below\n  useEffect(() => {\n    const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n    evtSource.onmessage = data => {\n      var eventData = JSON.parse(data.data);\n      var vehicleData = eventData.vehicleData;\n      if (eventData.event == \"reset\") {\n        console.log(\"reset\");\n        setVehicleList(vehicleData);\n      } else if (eventData.event == \"update\") {\n        // console.log(vehicleList);\n        // var newData = vehicleList.map(item => {\n        //   console.log(\"map item .. \", item);\n        //   if (item.id == vehicleData[0].id){\n        //     return vehicleData[0];\n        //               console.log(vehicleList);\n\n        //   }\n        //   else\n        //               console.log(vehicleList);\n\n        //     return item;\n        // });\n        // console.log(\"update\", newData);\n        setVehicleList(vehicleList.push(vehicleData[0]));\n      }\n    };\n    evtSource.onerror = function (error) {\n      console.error('EventSource error:', error);\n    };\n    //close out event subscription on close of component\n    return () => {\n      evtSource.close();\n    };\n  }, []);\n}\n_s(Vehicles, \"O5rYaccuuWUrmMdgP7AwnaNzsfc=\");\n_c = Vehicles;\nexport default Vehicles;\nvar _c;\n$RefreshReg$(_c, \"Vehicles\");","map":{"version":3,"names":["useState","useEffect","d3","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","Vehicles","_ref","_s","svgRef","vehicleList","setVehicleList","svg","current","svgElement","select","console","log","selectAll","data","d","id","join","enter","append","attr","i","text","currentStatus","update","exit","remove","evtSource","EventSource","onmessage","eventData","JSON","parse","vehicleData","event","push","onerror","error","close","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Vehicles.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\n\nfunction Vehicles({ svgRef }) { \n    const [vehicleList, setVehicleList] = useState([]);\n\n    useEffect(() => {\n      const svg = svgRef.current;\n      var svgElement = d3.select(svg);\n       console.log(\"vdata \", vehicleList);\n      svgElement.selectAll(\"text.vehicle\")\n      .data(vehicleList, d=>d.id)\n      .join(\n        (enter) => {\n          enter\n          .append(\"text\")\n          .attr(\"class\", \"vehicle\")\n          // .attr(\"key\", d=>d.id)\n          .attr(\"x\", function(d,i){return 30 + i * 40})\n          .attr(\"y\", 300)\n          .attr(\"font-size\", 5)\n          .text(d=>d.currentStatus);\n      },\n      (update) => {\n        update.attr(\"x\", function(d,i){return 30 + i * 40})\n      },\n      (exit) => {\n        exit.remove(); \n    } \n      );\n    }, [vehicleList]);\n\n    //Load vehicles below\n    useEffect(() => {\n      const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n      evtSource.onmessage = (data) => {\n        var eventData = JSON.parse(data.data);\n        var vehicleData = eventData.vehicleData;\n        if(eventData.event == \"reset\"){\n          console.log(\"reset\");\n          setVehicleList(vehicleData);\n        } else if(eventData.event == \"update\"){\n          // console.log(vehicleList);\n          // var newData = vehicleList.map(item => {\n          //   console.log(\"map item .. \", item);\n          //   if (item.id == vehicleData[0].id){\n          //     return vehicleData[0];\n          //               console.log(vehicleList);\n\n          //   }\n          //   else\n          //               console.log(vehicleList);\n\n          //     return item;\n          // });\n          // console.log(\"update\", newData);\n          setVehicleList(vehicleList.push(vehicleData[0]));\n        }\n\n      };\n      evtSource.onerror = function (error) {\n        console.error('EventSource error:', error);\n      };\n      //close out event subscription on close of component\n      return () => {\n        evtSource.close();\n      };\n    },[]);\n}\n\n\n\nexport default Vehicles;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}