{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\";\nimport { Line, Chart } from 'react-chartjs-2';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  const coordinates = [{\n    lat: 42.39674,\n    long: -71.12181\n  }, {\n    lat: 42.3884,\n    long: -71.119149\n  }];\n  const labels = ['A', 'B', 'C', 'D'];\n  const data = [0, 10, 5, 2];\n  const config = {\n    labels: labels,\n    // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\n    datasets: [{\n      data: [0, 10, 5, 2],\n      backgroundColor: \"rgb(10, 99, 132)\",\n      borderColor: \"#00843D\" // Change line color to red\n    }]\n  };\n\n  const options = {\n    scales: {\n      x: {\n        display: false,\n        // Remove x-axis\n        grid: {\n          display: false // Remove x-axis grid lines\n        }\n      },\n\n      y: {\n        display: false,\n        // Remove x-axis\n        grid: {\n          display: false // Remove y-axis grid lines\n        }\n      }\n    },\n\n    elements: {\n      line: {\n        borderWidth: 10 // Increase line width to 2 pixels\n      }\n    },\n\n    plugins: {\n      tooltip: {\n        enabled: false // Disable default tooltip\n      },\n\n      datalabels: {\n        display: true,\n        align: 'top',\n        formatter: function (value, context) {\n          const point = data[context.dataIndex];\n          return `(${point.x}, ${point.y})`;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: config,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["Line","Chart","React","useState","jsxDEV","_jsxDEV","Map","coordinates","lat","long","labels","data","config","datasets","backgroundColor","borderColor","options","scales","x","display","grid","y","elements","line","borderWidth","plugins","tooltip","enabled","datalabels","align","formatter","value","context","point","dataIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import { Line, Chart } from 'react-chartjs-2';\nimport React, { useState } from 'react';\n\n\nfunction Map() {\n    const coordinates = [\n      { lat: 42.39674, long: -71.12181 },\n      { lat: 42.3884, long: -71.119149 }\n    ]\n\n    const labels = ['A', 'B', 'C', 'D'];\n    const data = [0,10,5,2];\n    const config = {\n      labels: labels,\n        // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\n        datasets:[{\n            data: [0,10,5,2],\n            backgroundColor: \"rgb(10, 99, 132)\",\n                  borderColor: \"#00843D\", // Change line color to red\n\n          },\n        ],\n      }\n      const options = {\n  scales: {\n    x: {\n      display: false, // Remove x-axis\n      grid: {\n        display: false // Remove x-axis grid lines\n      }\n    },\n    y: {\n      display: false, // Remove x-axis\n      grid: {\n        display: false // Remove y-axis grid lines\n      }\n    }\n  },\n  elements: {\n      line: {\n        borderWidth: 10 // Increase line width to 2 pixels\n      }\n    },\n    plugins: {\n      tooltip: {\n        enabled: false // Disable default tooltip\n      },\n      datalabels: {\n        display: true,\n        align: 'top',\n        formatter: function(value, context) {\n          const point = data[context.dataIndex];\n          return `(${point.x}, ${point.y})`;\n        }\n      }\n    }\n};\n      return (\n        <div className=\"Map\">\n          <Line data={config} options={options} />\n        </div> \n      );\n}\n\nexport default Map;\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAC7C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,SAASC,GAAGA,CAAA,EAAG;EACX,MAAMC,WAAW,GAAG,CAClB;IAAEC,GAAG,EAAE,QAAQ;IAAEC,IAAI,EAAE,CAAC;EAAS,CAAC,EAClC;IAAED,GAAG,EAAE,OAAO;IAAEC,IAAI,EAAE,CAAC;EAAU,CAAC,CACnC;EAED,MAAMC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACnC,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,CAAC;EACvB,MAAMC,MAAM,GAAG;IACbF,MAAM,EAAEA,MAAM;IACZ;IACAG,QAAQ,EAAC,CAAC;MACNF,IAAI,EAAE,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,CAAC;MAChBG,eAAe,EAAE,kBAAkB;MAC7BC,WAAW,EAAE,SAAS,CAAE;IAEhC,CAAC;EAEL,CAAC;;EACD,MAAMC,OAAO,GAAG;IACpBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,OAAO,EAAE,KAAK;QAAE;QAChBC,IAAI,EAAE;UACJD,OAAO,EAAE,KAAK,CAAC;QACjB;MACF,CAAC;;MACDE,CAAC,EAAE;QACDF,OAAO,EAAE,KAAK;QAAE;QAChBC,IAAI,EAAE;UACJD,OAAO,EAAE,KAAK,CAAC;QACjB;MACF;IACF,CAAC;;IACDG,QAAQ,EAAE;MACNC,IAAI,EAAE;QACJC,WAAW,EAAE,EAAE,CAAC;MAClB;IACF,CAAC;;IACDC,OAAO,EAAE;MACPC,OAAO,EAAE;QACPC,OAAO,EAAE,KAAK,CAAC;MACjB,CAAC;;MACDC,UAAU,EAAE;QACVT,OAAO,EAAE,IAAI;QACbU,KAAK,EAAE,KAAK;QACZC,SAAS,EAAE,SAAAA,CAASC,KAAK,EAAEC,OAAO,EAAE;UAClC,MAAMC,KAAK,GAAGtB,IAAI,CAACqB,OAAO,CAACE,SAAS,CAAC;UACrC,OAAQ,IAAGD,KAAK,CAACf,CAAE,KAAIe,KAAK,CAACZ,CAAE,GAAE;QACnC;MACF;IACF;EACJ,CAAC;EACK,oBACEhB,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB/B,OAAA,CAACL,IAAI;MAACW,IAAI,EAAEC,MAAO;MAACI,OAAO,EAAEA;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd;AAACC,EAAA,GA1DQnC,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}