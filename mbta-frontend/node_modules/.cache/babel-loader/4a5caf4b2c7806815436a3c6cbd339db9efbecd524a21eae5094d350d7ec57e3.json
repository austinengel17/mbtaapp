{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nfunction Vehicles(_ref) {\n  _s();\n  let {\n    svgRef,\n    stationData,\n    stationMapping,\n    selectedLine\n  } = _ref;\n  const [vehicleList, setVehicleList] = useState([]);\n  var backendHost = \"localhost:8080/\";\n  var controllerEndpoint = \"mbta/v1/livemap\";\n  var vehiclePositionSub = \"/vehicle/location/\" + selectedLine;\n  var mbtaStopsEndpoint = \"/stops/line/\" + selectedLine;\n  var inTransitTo = \"IN_TRANSIT_TO\";\n  var incomingAt = \"INCOMING_AT\";\n  useEffect(() => {\n    const svg = svgRef.current;\n    var svgElement = d3.select(svg);\n    svgElement.selectAll(\"g.vehicle-group\").data(vehicleList, d => d.id).join(enter => {\n      var vGroup = enter.append(\"g\").attr(\"class\", \"vehicle-group\").attr(\"transform\", function (d, i) {\n        var stopId = d.stopId;\n        var stopName = stationMapping[stopId];\n        var station = svgElement.selectAll(\"#\" + stopName);\n        var circlePosition = station.node().getBoundingClientRect();\n        var x = +circlePosition.left + window.pageXOffset;\n        if (d.currentStatus == inTransitTo) {\n          x = x - 30;\n        }\n        if (d.currentStatus == incomingAt) {\n          x = x - 15;\n        }\n        return \"translate(\" + x + \" , 155)\";\n      });\n      vGroup.append(\"rect\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", 5).attr(\"height\", 5);\n      vGroup.append(\"text\").attr(\"class\", \"vehicle\").attr(\"x\", 0).attr(\"y\", 5).attr(\"font-size\", 5).attr(\"transform\", \"rotate(45)\").text(function (d) {\n        return d.id + \" - \" + d.currentStatus;\n      });\n    }, update => {\n      update.attr(\"transform\", function (d, i) {\n        var stopId = d.stopId;\n        var stopName = stationMapping[stopId];\n        var station = svgElement.selectAll(\"#\" + stopName);\n        var circlePosition = station.node().getBoundingClientRect();\n        var x = +circlePosition.left + window.pageXOffset;\n        if (d.currentStatus == inTransitTo) {\n          x = x - 30;\n        }\n        if (d.currentStatus == incomingAt) {\n          x = x - 15;\n        }\n        return \"translate(\" + x + \" , 155)\";\n      });\n      update.select(\"text\").text(function (d) {\n        var stopId = d.stopId;\n        var stopName = stationMapping[stopId];\n        return d.id + \" - \" + d.currentStatus + ' - ' + stationMapping[stopId];\n      });\n      // update.select(\"rect\")\n      // .attr(\"x\", function(d,i){\n      //       var stopId = d.stopId;\n      //       var stopName = stationMapping[stopId];\n      //       var station = svgElement.selectAll(\"#\" + stopName)\n      //       var circlePosition = station.node().getBoundingClientRect();\n      //       return +circlePosition.left + window.pageXOffset;\n      //     })\n    }, exit => {\n      exit.remove();\n    });\n  }, [vehicleList]);\n\n  //Load vehicles below\n  useEffect(() => {\n    const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n    evtSource.onmessage = data => {\n      var eventData = JSON.parse(data.data);\n      var vehicleData = eventData.vehicleData;\n      if (eventData.event == \"reset\") {\n        console.log(\"reset\");\n        setVehicleList(vehicleData);\n      } else if (eventData.event == \"update\") {\n        setVehicleList(prevList => {\n          var newData = prevList.map(item => {\n            if (item.id === vehicleData[0].id && !(item.currentStatus === vehicleData[0].currentStatus)) {\n              return vehicleData[0];\n            }\n            return item;\n          });\n          console.log(\"update\", newData);\n          return newData;\n        });\n        // setVehicleList(vehicleData);\n      }\n    };\n\n    evtSource.onerror = function (error) {\n      console.error('EventSource error:', error);\n    };\n    //close out event subscription on close of component\n    return () => {\n      evtSource.close();\n    };\n  }, []);\n}\n_s(Vehicles, \"O5rYaccuuWUrmMdgP7AwnaNzsfc=\");\n_c = Vehicles;\nexport default Vehicles;\nvar _c;\n$RefreshReg$(_c, \"Vehicles\");","map":{"version":3,"names":["useState","useEffect","d3","Vehicles","_ref","_s","svgRef","stationData","stationMapping","selectedLine","vehicleList","setVehicleList","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","inTransitTo","incomingAt","svg","current","svgElement","select","selectAll","data","d","id","join","enter","vGroup","append","attr","i","stopId","stopName","station","circlePosition","node","getBoundingClientRect","x","left","window","pageXOffset","currentStatus","text","update","exit","remove","evtSource","EventSource","onmessage","eventData","JSON","parse","vehicleData","event","console","log","prevList","newData","map","item","onerror","error","close","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Vehicles.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nfunction Vehicles({ svgRef, stationData, stationMapping, selectedLine}) { \n    const [vehicleList, setVehicleList] = useState([]);\n    var backendHost = \"localhost:8080/\";\n    var controllerEndpoint = \"mbta/v1/livemap\";\n    var vehiclePositionSub = \"/vehicle/location/\" + selectedLine;\n    var mbtaStopsEndpoint = \"/stops/line/\" + selectedLine;\n    var inTransitTo = \"IN_TRANSIT_TO\";\n    var incomingAt = \"INCOMING_AT\";\n\n\n    useEffect(() => {\n      const svg = svgRef.current;\n      var svgElement = d3.select(svg);\n      svgElement.selectAll(\"g.vehicle-group\")\n      .data(vehicleList, d=>d.id)\n      .join(\n        (enter) => {\n          var vGroup = enter.append(\"g\")\n          .attr(\"class\", \"vehicle-group\")\n          .attr(\"transform\", function(d, i){\n            var stopId = d.stopId;\n              var stopName = stationMapping[stopId];\n              var station = svgElement.selectAll(\"#\" + stopName)\n              var circlePosition = station.node().getBoundingClientRect()\n              var x = +circlePosition.left + window.pageXOffset;\n              if(d.currentStatus == inTransitTo){\n                x = x-30;\n              }\n              if(d.currentStatus == incomingAt){\n                x = x-15;\n              }\n\n            return \"translate(\" + x + \" , 155)\";\n          });\n\n           vGroup.append(\"rect\")\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", 5)\n            .attr(\"height\", 5);\n\n          vGroup\n          .append(\"text\")\n          .attr(\"class\", \"vehicle\")\n          .attr(\"x\", 0)\n          .attr(\"y\", 5)\n          .attr(\"font-size\", 5)\n          .attr(\"transform\", \"rotate(45)\")\n          .text(function(d){return d.id + \" - \" + d.currentStatus});\n      },\n      (update) => {\n        update.attr(\"transform\", function(d, i){\n            var stopId = d.stopId;\n              var stopName = stationMapping[stopId];\n              var station = svgElement.selectAll(\"#\" + stopName)\n              var circlePosition = station.node().getBoundingClientRect()\n              var x = +circlePosition.left + window.pageXOffset;\n              if(d.currentStatus == inTransitTo){\n                x = x-30;\n              }\n              if(d.currentStatus == incomingAt){\n                x = x-15;\n              }\n\n            return \"translate(\" + x + \" , 155)\";\n          });\n        update.select(\"text\").text(function(d){\n          var stopId = d.stopId;\n          var stopName = stationMapping[stopId];\n          return d.id + \" - \" + d.currentStatus + ' - ' + stationMapping[stopId];\n        });\n        // update.select(\"rect\")\n        // .attr(\"x\", function(d,i){\n        //       var stopId = d.stopId;\n        //       var stopName = stationMapping[stopId];\n        //       var station = svgElement.selectAll(\"#\" + stopName)\n        //       var circlePosition = station.node().getBoundingClientRect();\n        //       return +circlePosition.left + window.pageXOffset;\n        //     })\n      },\n      (exit) => {\n        exit.remove(); \n    } \n      );\n    }, [vehicleList]);\n\n    //Load vehicles below\n    useEffect(() => {\n      const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n      evtSource.onmessage = (data) => {\n        var eventData = JSON.parse(data.data);\n        var vehicleData = eventData.vehicleData;\n        if(eventData.event == \"reset\"){\n          console.log(\"reset\");\n          setVehicleList(vehicleData);\n        } else if(eventData.event == \"update\"){\n          setVehicleList((prevList) => {\n          var newData = prevList.map((item) => {\n            if (item.id === vehicleData[0].id && !(item.currentStatus === vehicleData[0].currentStatus)) {\n              return vehicleData[0];\n            }\n            return item;\n          });\n          console.log(\"update\", newData);\n          return newData;\n        });\n        // setVehicleList(vehicleData);\n        }\n\n      };\n      evtSource.onerror = function (error) {\n        console.error('EventSource error:', error);\n      };\n      //close out event subscription on close of component\n      return () => {\n        evtSource.close();\n      };\n    },[]);\n}\n\n\n\nexport default Vehicles;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,KAAKC,EAAE,MAAM,IAAI;AAIxB,SAASC,QAAQA,CAAAC,IAAA,EAAuD;EAAAC,EAAA;EAAA,IAAtD;IAAEC,MAAM;IAAEC,WAAW;IAAEC,cAAc;IAAEC;EAAY,CAAC,GAAAL,IAAA;EAClE,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,IAAIY,WAAW,GAAG,iBAAiB;EACnC,IAAIC,kBAAkB,GAAG,iBAAiB;EAC1C,IAAIC,kBAAkB,GAAG,oBAAoB,GAAGL,YAAY;EAC5D,IAAIM,iBAAiB,GAAG,cAAc,GAAGN,YAAY;EACrD,IAAIO,WAAW,GAAG,eAAe;EACjC,IAAIC,UAAU,GAAG,aAAa;EAG9BhB,SAAS,CAAC,MAAM;IACd,MAAMiB,GAAG,GAAGZ,MAAM,CAACa,OAAO;IAC1B,IAAIC,UAAU,GAAGlB,EAAE,CAACmB,MAAM,CAACH,GAAG,CAAC;IAC/BE,UAAU,CAACE,SAAS,CAAC,iBAAiB,CAAC,CACtCC,IAAI,CAACb,WAAW,EAAEc,CAAC,IAAEA,CAAC,CAACC,EAAE,CAAC,CAC1BC,IAAI,CACFC,KAAK,IAAK;MACT,IAAIC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAAC,GAAG,CAAC,CAC7BC,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,CAC9BA,IAAI,CAAC,WAAW,EAAE,UAASN,CAAC,EAAEO,CAAC,EAAC;QAC/B,IAAIC,MAAM,GAAGR,CAAC,CAACQ,MAAM;QACnB,IAAIC,QAAQ,GAAGzB,cAAc,CAACwB,MAAM,CAAC;QACrC,IAAIE,OAAO,GAAGd,UAAU,CAACE,SAAS,CAAC,GAAG,GAAGW,QAAQ,CAAC;QAClD,IAAIE,cAAc,GAAGD,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,qBAAqB,CAAC,CAAC;QAC3D,IAAIC,CAAC,GAAG,CAACH,cAAc,CAACI,IAAI,GAAGC,MAAM,CAACC,WAAW;QACjD,IAAGjB,CAAC,CAACkB,aAAa,IAAI1B,WAAW,EAAC;UAChCsB,CAAC,GAAGA,CAAC,GAAC,EAAE;QACV;QACA,IAAGd,CAAC,CAACkB,aAAa,IAAIzB,UAAU,EAAC;UAC/BqB,CAAC,GAAGA,CAAC,GAAC,EAAE;QACV;QAEF,OAAO,YAAY,GAAGA,CAAC,GAAG,SAAS;MACrC,CAAC,CAAC;MAEDV,MAAM,CAACC,MAAM,CAAC,MAAM,CAAC,CACnBC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAChBA,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;MAEpBF,MAAM,CACLC,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBA,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CACpBA,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAC/Ba,IAAI,CAAC,UAASnB,CAAC,EAAC;QAAC,OAAOA,CAAC,CAACC,EAAE,GAAG,KAAK,GAAGD,CAAC,CAACkB,aAAa;MAAA,CAAC,CAAC;IAC7D,CAAC,EACAE,MAAM,IAAK;MACVA,MAAM,CAACd,IAAI,CAAC,WAAW,EAAE,UAASN,CAAC,EAAEO,CAAC,EAAC;QACnC,IAAIC,MAAM,GAAGR,CAAC,CAACQ,MAAM;QACnB,IAAIC,QAAQ,GAAGzB,cAAc,CAACwB,MAAM,CAAC;QACrC,IAAIE,OAAO,GAAGd,UAAU,CAACE,SAAS,CAAC,GAAG,GAAGW,QAAQ,CAAC;QAClD,IAAIE,cAAc,GAAGD,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,qBAAqB,CAAC,CAAC;QAC3D,IAAIC,CAAC,GAAG,CAACH,cAAc,CAACI,IAAI,GAAGC,MAAM,CAACC,WAAW;QACjD,IAAGjB,CAAC,CAACkB,aAAa,IAAI1B,WAAW,EAAC;UAChCsB,CAAC,GAAGA,CAAC,GAAC,EAAE;QACV;QACA,IAAGd,CAAC,CAACkB,aAAa,IAAIzB,UAAU,EAAC;UAC/BqB,CAAC,GAAGA,CAAC,GAAC,EAAE;QACV;QAEF,OAAO,YAAY,GAAGA,CAAC,GAAG,SAAS;MACrC,CAAC,CAAC;MACJM,MAAM,CAACvB,MAAM,CAAC,MAAM,CAAC,CAACsB,IAAI,CAAC,UAASnB,CAAC,EAAC;QACpC,IAAIQ,MAAM,GAAGR,CAAC,CAACQ,MAAM;QACrB,IAAIC,QAAQ,GAAGzB,cAAc,CAACwB,MAAM,CAAC;QACrC,OAAOR,CAAC,CAACC,EAAE,GAAG,KAAK,GAAGD,CAAC,CAACkB,aAAa,GAAG,KAAK,GAAGlC,cAAc,CAACwB,MAAM,CAAC;MACxE,CAAC,CAAC;MACF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,EACAa,IAAI,IAAK;MACRA,IAAI,CAACC,MAAM,CAAC,CAAC;IACjB,CACE,CAAC;EACH,CAAC,EAAE,CAACpC,WAAW,CAAC,CAAC;;EAEjB;EACAT,SAAS,CAAC,MAAM;IACd,MAAM8C,SAAS,GAAG,IAAIC,WAAW,CAAC,SAAS,GAAGpC,WAAW,GAAGC,kBAAkB,GAAGC,kBAAkB,CAAC;IACpGiC,SAAS,CAACE,SAAS,GAAI1B,IAAI,IAAK;MAC9B,IAAI2B,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC7B,IAAI,CAACA,IAAI,CAAC;MACrC,IAAI8B,WAAW,GAAGH,SAAS,CAACG,WAAW;MACvC,IAAGH,SAAS,CAACI,KAAK,IAAI,OAAO,EAAC;QAC5BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpB7C,cAAc,CAAC0C,WAAW,CAAC;MAC7B,CAAC,MAAM,IAAGH,SAAS,CAACI,KAAK,IAAI,QAAQ,EAAC;QACpC3C,cAAc,CAAE8C,QAAQ,IAAK;UAC7B,IAAIC,OAAO,GAAGD,QAAQ,CAACE,GAAG,CAAEC,IAAI,IAAK;YACnC,IAAIA,IAAI,CAACnC,EAAE,KAAK4B,WAAW,CAAC,CAAC,CAAC,CAAC5B,EAAE,IAAI,EAAEmC,IAAI,CAAClB,aAAa,KAAKW,WAAW,CAAC,CAAC,CAAC,CAACX,aAAa,CAAC,EAAE;cAC3F,OAAOW,WAAW,CAAC,CAAC,CAAC;YACvB;YACA,OAAOO,IAAI;UACb,CAAC,CAAC;UACFL,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,OAAO,CAAC;UAC9B,OAAOA,OAAO;QAChB,CAAC,CAAC;QACF;MACA;IAEF,CAAC;;IACDX,SAAS,CAACc,OAAO,GAAG,UAAUC,KAAK,EAAE;MACnCP,OAAO,CAACO,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC;IACD;IACA,OAAO,MAAM;MACXf,SAAS,CAACgB,KAAK,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAC,EAAE,CAAC;AACT;AAAC1D,EAAA,CAtHQF,QAAQ;AAAA6D,EAAA,GAAR7D,QAAQ;AA0HjB,eAAeA,QAAQ;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}