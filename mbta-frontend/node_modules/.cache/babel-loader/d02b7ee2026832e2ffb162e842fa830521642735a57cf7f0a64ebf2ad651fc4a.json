{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport Draw from './draw.js';\nimport Vehicles from './Vehicles.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nfunction Map() {\n  _s();\n  const svgRef = useRef(null);\n  // const [stationData, setStationData] = useState(null);\n\n  // var xhr = new XMLHttpRequest();\n\n  //   // Making our connection \n  // var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  // xhr.open(\"GET\", url, true);\n\n  //   // function execute after request is successful\n  // xhr.onreadystatechange = function () {\n  //   if (this.readyState == 4 && this.status == 200) {\n  //       var temp = JSON.parse(this.responseText);\n  //       var stationDataTemp = Object.keys(temp).map(v => ({[v.replace(/['\"]+/g, '')]: {...temp[v]}}));\n  //       console.log(stationDataTemp);\n  //       setStationData(stationDataTemp);     \n  //   }\n  // }\n  //   if(stationData == null){\n  //     return(<div>Loading...</div>);\n  //   }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"2000\",\n      width: \"2000\",\n      ref: svgRef,\n      children: [/*#__PURE__*/_jsxDEV(Draw, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Vehicles, {\n        svgRef: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n_s(Map, \"hBmswj7ndKUg9xiEeqZsAgaPoNM=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useState","useEffect","useRef","d3","Draw","Vehicles","jsxDEV","_jsxDEV","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","Map","_s","svgRef","className","children","height","width","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport Draw from'./draw.js';\nimport Vehicles from'./Vehicles.js';\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nfunction Map() { \n  const svgRef = useRef(null);\n  // const [stationData, setStationData] = useState(null);\n\n  // var xhr = new XMLHttpRequest();\n \n  //   // Making our connection \n  // var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  // xhr.open(\"GET\", url, true);\n \n  //   // function execute after request is successful\n  // xhr.onreadystatechange = function () {\n  //   if (this.readyState == 4 && this.status == 200) {\n  //       var temp = JSON.parse(this.responseText);\n  //       var stationDataTemp = Object.keys(temp).map(v => ({[v.replace(/['\"]+/g, '')]: {...temp[v]}}));\n  //       console.log(stationDataTemp);\n  //       setStationData(stationDataTemp);     \n  //   }\n  // }\n  //   if(stationData == null){\n  //     return(<div>Loading...</div>);\n  //   }\n    return (\n      <div className=\"Map\">\n        <svg height=\"2000\" width=\"2000\" ref={svgRef} >\n        <Draw />\n        <Vehicles svgRef={svgRef} />\n        </svg>\n      </div> \n    );\n}\n\nexport default Map;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,IAAI,MAAK,WAAW;AAC3B,OAAOC,QAAQ,MAAK,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,IAAIC,WAAW,GAAG,iBAAiB;AACnC,IAAIC,kBAAkB,GAAG,iBAAiB;AAC1C,IAAIC,kBAAkB,GAAG,2BAA2B;AACpD,IAAIC,iBAAiB,GAAG,qBAAqB;AAC7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC3B;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,oBACEK,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBT,OAAA;MAAKU,MAAM,EAAC,MAAM;MAACC,KAAK,EAAC,MAAM;MAACC,GAAG,EAAEL,MAAO;MAAAE,QAAA,gBAC5CT,OAAA,CAACH,IAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRhB,OAAA,CAACF,QAAQ;QAACS,MAAM,EAAEA;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACV,EAAA,CA9BQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}