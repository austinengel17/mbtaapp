{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport './Vehicles.css';\nfunction Vehicles(_ref) {\n  _s();\n  let {\n    svgRef,\n    stationData,\n    stationMapping,\n    selectedLine\n  } = _ref;\n  const [vehicleList, setVehicleList] = useState([]);\n  var backendHost = \"localhost:8080/\";\n  var controllerEndpoint = \"mbta/v1/livemap\";\n  var vehiclePositionSub = \"/vehicle/location/\" + selectedLine;\n  var mbtaStopsEndpoint = \"/stops/line/\" + selectedLine;\n  var inTransitTo = \"IN_TRANSIT_TO\";\n  var incomingAt = \"INCOMING_AT\";\n  useEffect(() => {\n    const svg = svgRef.current;\n    var svgElement = d3.select(svg); //left facing arrow marker\n\n    svgElement.selectAll(\"g.vehicle-group\").data(vehicleList, d => d.id).join(enter => {\n      var vGroup = enter.append(\"g\").attr(\"class\", \"vehicle-group\").attr(\"transform\", function (d, i) {\n        var stopId = d.stopId;\n        var stopName = stationMapping[stopId];\n        console.log('pre bounding rec client ', stopName);\n        console.log('pre bounding rec client ', stopId);\n        var station = svgElement.selectAll(\"#\" + stopName);\n        var circlePosition = station.node().getBoundingClientRect();\n        var x = +circlePosition.left + window.pageXOffset;\n        var directionId = d.directionId;\n        if (d.currentStatus == inTransitTo) {\n          if (directionId == 0) x = x + 30;else x = x - 30;\n        }\n        if (d.currentStatus == incomingAt) {\n          if (directionId == 0) x = x + 15;else x = x - 15;\n        }\n        return \"translate(\" + x + \" , 155)\";\n      });\n\n      // vGroup.append(\"rect\")\n      //  .attr(\"x\", 0)\n      //  .attr(\"y\", 0)\n      //  .attr(\"width\", 5)\n      //  .attr(\"height\", 5);\n\n      vGroup.append(\"polygon\").attr(\"points\", function (d) {\n        if (d.directionId == 1) return \"3,0 -3,0 -3,7 3,7 7,3\"; //outbound\n        else return \"-3,5 3,5 3,12 -3,12 -7,8\"; //inbound\n      }).attr(\"fill\", \"lightgrey\");\n      vGroup.append(\"text\").attr(\"class\", \"vehicle\").attr(\"x\", 15).attr(\"y\", 0).attr(\"font-size\", 5).attr(\"transform\", \"rotate(45)\").text(function (d) {\n        var stopId = d.stopId;\n        var stopName = stationMapping[stopId];\n        return d.id + \" - \" + d.currentStatus + ' - ' + stationMapping[stopId] + ' - direction: ' + d.directionId;\n      });\n    }, update => {\n      update.transition().duration(3000).attr(\"transform\", function (d, i) {\n        var stopId = d.stopId;\n        var stopName = stationMapping[stopId];\n        var station = svgElement.selectAll(\"#\" + stopName);\n        console.log('pre bounding rec client ', stopName);\n        console.log('pre bounding rec client ', stopId);\n        var circlePosition = station.node().getBoundingClientRect();\n        var x = +circlePosition.left + window.pageXOffset;\n        var directionId = d.directionId;\n        if (d.currentStatus == inTransitTo) {\n          if (directionId == 0) x = x + 30;else x = x - 30;\n        }\n        if (d.currentStatus == incomingAt) {\n          if (directionId == 0) x = x + 15;else x = x - 15;\n        }\n        return \"translate(\" + x + \" , 155)\";\n      });\n      update.select(\"polygon\").attr(\"points\", function (d) {\n        if (d.directionId == 1) return \"3,0 -3,0 -3,7 3,7 7,3\"; //outbound\n        else return \"-3,5 3,5 3,12 -3,12 -7,8\"; //inbound\n      });\n\n      update.select(\"text\").text(function (d) {\n        var stopId = d.stopId;\n        var stopName = stationMapping[stopId];\n        return d.id + \" - \" + d.currentStatus + ' - ' + stationMapping[stopId] + ' - direction: ' + d.directionId; // == 0 ? \"inbound\" : \"outbound\";\n      });\n    }, exit => {\n      exit.remove();\n    });\n  }, [vehicleList]);\n\n  //Load vehicles below\n  useEffect(() => {\n    const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n    evtSource.onmessage = data => {\n      var eventData = JSON.parse(data.data);\n      console.log(\"Event data .. \", eventData);\n      var vehicleData = eventData.vehicleData;\n      if (eventData.event == \"reset\") {\n        console.log(\"reset\");\n        setVehicleList(vehicleData);\n      } else if (eventData.event == \"update\") {\n        setVehicleList(prevList => {\n          var newData = prevList.map(item => {\n            if (item.id === vehicleData[0].id && !(item.currentStatus === vehicleData[0].currentStatus)) {\n              return vehicleData[0];\n            }\n            return item;\n          });\n          console.log(\"update\", newData);\n          return newData;\n        });\n      }\n    };\n    evtSource.onerror = function (error) {\n      console.error('EventSource error:', error);\n    };\n    //close out event subscription on close of component\n    return () => {\n      evtSource.close();\n    };\n  }, [selectedLine]);\n}\n_s(Vehicles, \"O5rYaccuuWUrmMdgP7AwnaNzsfc=\");\n_c = Vehicles;\nexport default Vehicles;\nvar _c;\n$RefreshReg$(_c, \"Vehicles\");","map":{"version":3,"names":["useState","useEffect","d3","Vehicles","_ref","_s","svgRef","stationData","stationMapping","selectedLine","vehicleList","setVehicleList","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","inTransitTo","incomingAt","svg","current","svgElement","select","selectAll","data","d","id","join","enter","vGroup","append","attr","i","stopId","stopName","console","log","station","circlePosition","node","getBoundingClientRect","x","left","window","pageXOffset","directionId","currentStatus","text","update","transition","duration","exit","remove","evtSource","EventSource","onmessage","eventData","JSON","parse","vehicleData","event","prevList","newData","map","item","onerror","error","close","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Vehicles.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport './Vehicles.css';\n\n\nfunction Vehicles({ svgRef, stationData, stationMapping, selectedLine}) { \n    const [vehicleList, setVehicleList] = useState([]);\n    var backendHost = \"localhost:8080/\";\n    var controllerEndpoint = \"mbta/v1/livemap\";\n    var vehiclePositionSub = \"/vehicle/location/\" + selectedLine;\n    var mbtaStopsEndpoint = \"/stops/line/\" + selectedLine;\n    var inTransitTo = \"IN_TRANSIT_TO\";\n    var incomingAt = \"INCOMING_AT\";\n\n\n    useEffect(() => {\n      const svg = svgRef.current;         \n      var svgElement = d3.select(svg);    //left facing arrow marker\n\n      svgElement.selectAll(\"g.vehicle-group\")\n      .data(vehicleList, d=>d.id)\n      .join(\n        (enter) => {\n          var vGroup = enter.append(\"g\")\n          .attr(\"class\", \"vehicle-group\")\n          .attr(\"transform\", function(d, i){\n            var stopId = d.stopId;\n              var stopName = stationMapping[stopId];\n              console.log('pre bounding rec client ', stopName);\n              console.log('pre bounding rec client ', stopId);\n              var station = svgElement.selectAll(\"#\" + stopName)\n              var circlePosition = station.node().getBoundingClientRect()\n              var x = +circlePosition.left + window.pageXOffset;\n              var directionId = d.directionId;\n              if(d.currentStatus == inTransitTo){\n                if(directionId == 0)\n                  x=x+30;\n                else\n                  x=x-30;\n              }\n              if(d.currentStatus == incomingAt){\n                if(directionId == 0)\n                  x=x+15;\n                else\n                  x=x-15;\n              }\n\n            return \"translate(\" + x + \" , 155)\";\n          });\n\n           // vGroup.append(\"rect\")\n           //  .attr(\"x\", 0)\n           //  .attr(\"y\", 0)\n           //  .attr(\"width\", 5)\n           //  .attr(\"height\", 5);\n\n           vGroup.append(\"polygon\") \n            .attr(\"points\", function(d){\n              if(d.directionId == 1)\n                return \"3,0 -3,0 -3,7 3,7 7,3\"; //outbound\n              else\n                return \"-3,5 3,5 3,12 -3,12 -7,8\"; //inbound\n            })\n            .attr(\"fill\", \"lightgrey\");\n\n          vGroup\n          .append(\"text\")\n          .attr(\"class\", \"vehicle\")\n          .attr(\"x\", 15)\n          .attr(\"y\",0)\n          .attr(\"font-size\", 5)\n          .attr(\"transform\", \"rotate(45)\")\n          .text(function(d){\n             var stopId = d.stopId;\n            var stopName = stationMapping[stopId];\n            return d.id + \" - \" + d.currentStatus + ' - ' + stationMapping[stopId] + ' - direction: ' + d.directionId;\n          });\n      },\n      (update) => {\n        update\n        .transition()\n        .duration(3000)\n        .attr(\"transform\", function(d, i){\n            var stopId = d.stopId;\n              var stopName = stationMapping[stopId];\n              var station = svgElement.selectAll(\"#\" + stopName)\n              console.log('pre bounding rec client ', stopName);\n              console.log('pre bounding rec client ', stopId);\n              var circlePosition = station.node().getBoundingClientRect()\n              var x = +circlePosition.left + window.pageXOffset;\n              var directionId = d.directionId;\n              if(d.currentStatus == inTransitTo){\n                if(directionId == 0)\n                  x=x+30;\n                else\n                  x=x-30;\n              }\n              if(d.currentStatus == incomingAt){\n                if(directionId == 0)\n                  x=x+15;\n                else\n                  x=x-15;\n              }\n\n            return \"translate(\" + x + \" , 155)\";\n          });\n        update.select(\"polygon\")\n          .attr(\"points\", function(d){\n              if(d.directionId == 1)\n                return \"3,0 -3,0 -3,7 3,7 7,3\"; //outbound\n              else\n                return \"-3,5 3,5 3,12 -3,12 -7,8\"; //inbound\n            })\n        update.select(\"text\").text(function(d){\n          var stopId = d.stopId;\n          var stopName = stationMapping[stopId];\n          return d.id + \" - \" + d.currentStatus + ' - ' + stationMapping[stopId] + ' - direction: ' + d.directionId;// == 0 ? \"inbound\" : \"outbound\";\n        });\n      },\n      (exit) => {\n        exit.remove(); \n    } \n      );\n    }, [vehicleList]);\n\n    //Load vehicles below\n    useEffect(() => {\n      const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n      evtSource.onmessage = (data) => {\n        var eventData = JSON.parse(data.data);\n        console.log(\"Event data .. \", eventData);\n        var vehicleData = eventData.vehicleData;\n        if(eventData.event == \"reset\"){\n          console.log(\"reset\");\n          setVehicleList(vehicleData);\n        } else if(eventData.event == \"update\"){\n          setVehicleList((prevList) => {\n          var newData = prevList.map((item) => {\n            if (item.id === vehicleData[0].id && !(item.currentStatus === vehicleData[0].currentStatus)) {\n              return vehicleData[0];\n            }\n            return item;\n          });\n          console.log(\"update\", newData);\n          return newData;\n        });\n        }\n\n      };\n      evtSource.onerror = function (error) {\n        console.error('EventSource error:', error);\n      };\n      //close out event subscription on close of component\n      return () => {\n        evtSource.close();\n      };\n    },[selectedLine]);\n}\n\n\n\nexport default Vehicles;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}