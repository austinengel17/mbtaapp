{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport Chart from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  useEffect(() => {\n    const coordinates = [{\n      lat: 42.39674,\n      long: -71.12181\n    }, {\n      lat: 42.3884,\n      long: -71.119149\n    }];\n    const minX = -180; // Minimum value for X (longitude)\n    const maxX = 180; // Maximum value for X (longitude)\n    const minY = -90; // Minimum value for Y (latitude)\n    const maxY = 90; // Maximum value for Y (latitude)\n    const chart = new Chart(canvas, {\n      type: \"scatter\",\n      data: {\n        datasets: [{\n          label: \"Latitude and Longitude\",\n          data: coordinates.map(_ref => {\n            let {\n              lat,\n              long\n            } = _ref;\n            return {\n              x: long,\n              y: lat\n            };\n          }),\n          pointBackgroundColor: \"rgba(75, 192, 192, 1)\",\n          // Customize dot color\n          pointRadius: 6 // Customize dot size\n        }]\n      },\n\n      options: {\n        scales: {\n          x: {\n            type: \"linear\",\n            position: \"bottom\",\n            title: {\n              display: true,\n              text: \"Longitude\"\n            },\n            min: minX,\n            // Set the minimum value for X (longitude)\n            max: maxX // Set the maximum value for X (longitude)\n          },\n\n          y: {\n            type: \"linear\",\n            position: \"left\",\n            title: {\n              display: true,\n              text: \"Latitude\"\n            },\n            min: minY,\n            // Set the minimum value for Y (latitude)\n            max: maxY // Set the maximum value for Y (latitude)\n          }\n        }\n      }\n    });\n    // Cleanup chart on component unmount\n    return () => {\n      chart.destroy();\n    };\n  }, []); // Empty dependency array ensures the effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"myChart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","Map","_s","useEffect","coordinates","lat","long","minX","maxX","minY","maxY","chart","canvas","type","data","datasets","label","map","_ref","x","y","pointBackgroundColor","pointRadius","options","scales","position","title","display","text","min","max","destroy","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import Chart from 'chart.js';\nfunction Map() {\n    useEffect(() => {\n    const coordinates = [\n      { lat: 42.39674, long: -71.12181 },\n      { lat: 42.3884, long: -71.119149 }\n    ]\n    const minX = -180; // Minimum value for X (longitude)\n    const maxX = 180; // Maximum value for X (longitude)\n    const minY = -90; // Minimum value for Y (latitude)\n    const maxY = 90; // Maximum value for Y (latitude)\n    const chart = new Chart(canvas, {\n      type: \"scatter\",\n      data: {\n        datasets: [\n          {\n            label: \"Latitude and Longitude\",\n            data: coordinates.map(({ lat, long }) => ({ x: long, y: lat })),\n            pointBackgroundColor: \"rgba(75, 192, 192, 1)\", // Customize dot color\n            pointRadius: 6, // Customize dot size\n          },\n        ],\n      },\n      options: {\n        scales: {\n          x: {\n            type: \"linear\",\n            position: \"bottom\",\n            title: {\n              display: true,\n              text: \"Longitude\",\n            },\n            min: minX, // Set the minimum value for X (longitude)\n            max: maxX, // Set the maximum value for X (longitude)\n          },\n          y: {\n            type: \"linear\",\n            position: \"left\",\n            title: {\n              display: true,\n              text: \"Latitude\",\n            },\n            min: minY, // Set the minimum value for Y (latitude)\n            max: maxY, // Set the maximum value for Y (latitude)\n          },\n        },\n      },\n    });\n  // Cleanup chart on component unmount\n    return () => {\n      chart.destroy();\n    };\n  }, []); // Empty dependency array ensures the effect runs only once\n\n  return <canvas id=\"myChart\" />;\n}\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACXC,SAAS,CAAC,MAAM;IAChB,MAAMC,WAAW,GAAG,CAClB;MAAEC,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE,CAAC;IAAS,CAAC,EAClC;MAAED,GAAG,EAAE,OAAO;MAAEC,IAAI,EAAE,CAAC;IAAU,CAAC,CACnC;IACD,MAAMC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,MAAMC,IAAI,GAAG,GAAG,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG,EAAE,CAAC,CAAC;IACjB,MAAMC,KAAK,GAAG,IAAIb,KAAK,CAACc,MAAM,EAAE;MAC9BC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;QACJC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,wBAAwB;UAC/BF,IAAI,EAAEV,WAAW,CAACa,GAAG,CAACC,IAAA;YAAA,IAAC;cAAEb,GAAG;cAAEC;YAAK,CAAC,GAAAY,IAAA;YAAA,OAAM;cAAEC,CAAC,EAAEb,IAAI;cAAEc,CAAC,EAAEf;YAAI,CAAC;UAAA,CAAC,CAAC;UAC/DgB,oBAAoB,EAAE,uBAAuB;UAAE;UAC/CC,WAAW,EAAE,CAAC,CAAE;QAClB,CAAC;MAEL,CAAC;;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNL,CAAC,EAAE;YACDN,IAAI,EAAE,QAAQ;YACdY,QAAQ,EAAE,QAAQ;YAClBC,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR,CAAC;YACDC,GAAG,EAAEtB,IAAI;YAAE;YACXuB,GAAG,EAAEtB,IAAI,CAAE;UACb,CAAC;;UACDY,CAAC,EAAE;YACDP,IAAI,EAAE,QAAQ;YACdY,QAAQ,EAAE,MAAM;YAChBC,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR,CAAC;YACDC,GAAG,EAAEpB,IAAI;YAAE;YACXqB,GAAG,EAAEpB,IAAI,CAAE;UACb;QACF;MACF;IACF,CAAC,CAAC;IACJ;IACE,OAAO,MAAM;MACXC,KAAK,CAACoB,OAAO,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBAAO/B,OAAA;IAAQgC,EAAE,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChC;AAAClC,EAAA,CAtDQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}