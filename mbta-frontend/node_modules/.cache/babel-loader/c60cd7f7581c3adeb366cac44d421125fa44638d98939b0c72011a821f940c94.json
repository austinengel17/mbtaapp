{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nfunction Vehicles(_ref) {\n  _s();\n  let {\n    svgRef\n  } = _ref;\n  const [event, setEvent] = useState(\"hi\");\n  const [vehicleList, setVehicleList] = useState([]);\n  useEffect(() => {\n    console.log(vehicleList);\n    const svg = svgRef.current;\n    addVehicles(vehicleList, svg);\n  }, [vehicleList]);\n\n  //Load vehicles below\n  useEffect(() => {\n    const svg = svgRef.current;\n    const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n    evtSource.onmessage = data => {\n      var eventData = JSON.parse(data.data);\n      var vehicleData = eventData.vehicleData;\n      if (eventData.event == \"reset\") {\n        console.log(\"reset\");\n        setVehicleList(vehicleData);\n      }\n      if (eventData.event == \"update\") {\n        console.log(\"update\");\n        if (!!vehicleList.find(vehicle => vehicle.id === vehicleData[0].id)) {\n          setVehicleList(prevList => [...prevList, vehicleData[0]]);\n        } else {\n          console.log(\"update .. \", vehicleData[0]);\n          setVehicleList(prevList => prevList.map(vehicle => {\n            if (vehicle.id === vehicleData[0].id) {\n              return {\n                ...vehicle,\n                ...vehicleData[0]\n              };\n            }\n            return vehicle;\n          }));\n        }\n      } //\n    };\n\n    evtSource.onerror = function (error) {\n      console.error('EventSource error:', error);\n    };\n    //close out event subscription on close of component\n    return () => {\n      evtSource.close();\n    };\n  }, []);\n}\n_s(Vehicles, \"uKscnT5PoytvBVLLJaIyEHsTxlw=\");\n_c = Vehicles;\nfunction addVehicles(vehicleList, svg) {\n  console.log(\"add vehicles .\", vehicleList);\n  var vehicleGroup = svg.selectAll(\"g.vehicle-group\").data(vehicleList, d => d.id).join(enter => {\n    var groupEnter = enter.append(\"g\").attr(\"class\", \"vehicle-group\").attr(\"transform\", (d, i) => `translate(${10 + i * 40}, 0)`);\n    groupEnter.append(\"rect\").attr(\"x\", 0).attr(\"y\", 400).attr(\"width\", 10).attr(\"height\", 10).attr(\"class\", \"vehicle\").attr(\"id\", d => d.id);\n    groupEnter.append(\"text\").text(d => d.id).attr(\"width\", 100).attr(\"x\", 0).attr(\"y\", 450).attr(\"text-anchor\", \"middle\").attr(\"font-size\", 5);\n    groupEnter.append(\"text\").text(d => d.currentStatus).attr(\"width\", 100).attr(\"x\", 0).attr(\"y\", 460).attr(\"text-anchor\", \"middle\").attr(\"font-size\", 5).attr(\"class\", \"current-status\");\n  }, update => {\n    update.attr(\"class\", \"updated\");\n  }, exit => {\n    exit.selectAll(\".current-status\") // Select the text element within the exit selection\n    .transition() // Apply a transition for smooth removal\n    .duration(500) // Set the duration of the transition\n    .style(\"opacity\", 0) // Fade out the text element\n    .remove(); // Remove the text element\n\n    exit.selectAll(\".vehicle\") // Select the rect element within the exit selection\n    .transition() // Apply a transition for smooth removal\n    .duration(500) // Set the duration of the transition\n    .style(\"opacity\", 0) // Fade out the rect element\n    .remove(); // Remove the rect element\n\n    exit.remove(); // Remove the entire vehicle-group element\n  });\n}\n\nexport default Vehicles;\nvar _c;\n$RefreshReg$(_c, \"Vehicles\");","map":{"version":3,"names":["useState","useEffect","d3","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","Vehicles","_ref","_s","svgRef","event","setEvent","vehicleList","setVehicleList","console","log","svg","current","addVehicles","evtSource","EventSource","onmessage","data","eventData","JSON","parse","vehicleData","find","vehicle","id","prevList","map","onerror","error","close","_c","vehicleGroup","selectAll","d","join","enter","groupEnter","append","attr","i","text","currentStatus","update","exit","transition","duration","style","remove","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Vehicles.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\n\nfunction Vehicles({ svgRef }) { \n    const[event, setEvent] = useState(\"hi\");\n    const [vehicleList, setVehicleList] = useState([]);\n\n useEffect(() => {\n      console.log(vehicleList);\n      const svg = svgRef.current;\n      addVehicles(vehicleList, svg);\n  }, [vehicleList]);\n\n    //Load vehicles below\n    useEffect(() => {\n    const svg = svgRef.current;\n      const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n      evtSource.onmessage = (data) => {\n        var eventData = JSON.parse(data.data);\n        var vehicleData = eventData.vehicleData;\n        if(eventData.event == \"reset\"){\n          console.log(\"reset\");\n          setVehicleList(vehicleData);\n        }\n        if(eventData.event == \"update\"){\n          console.log(\"update\");\n          if(!!vehicleList.find((vehicle) => vehicle.id === vehicleData[0].id)){\n            setVehicleList((prevList) => [...prevList, vehicleData[0]]);\n          }\n          else {\n            console.log(\"update .. \", vehicleData[0]);\n            setVehicleList((prevList) =>\n              prevList.map((vehicle) => {\n                if (vehicle.id === vehicleData[0].id) {\n                  return {...vehicle, ...vehicleData[0]};\n                }\n                return vehicle;\n             })\n            );\n          }\n        }//\n\n      };\n      evtSource.onerror = function (error) {\n        console.error('EventSource error:', error);\n      };\n      //close out event subscription on close of component\n      return () => {\n        evtSource.close();\n      };\n    },[]);\n\n}\n\n\nfunction addVehicles(vehicleList, svg){\n  console.log(\"add vehicles .\", vehicleList);\n   var vehicleGroup = svg\n    .selectAll(\"g.vehicle-group\")\n    .data(vehicleList, (d) => d.id)\n    .join(\n      (enter) => {\n        var groupEnter = enter\n          .append(\"g\")\n          .attr(\"class\", \"vehicle-group\")\n          .attr(\"transform\", (d, i) => `translate(${10 + i * 40}, 0)`);\n\n        groupEnter\n          .append(\"rect\")\n          .attr(\"x\", 0)\n          .attr(\"y\", 400)\n          .attr(\"width\", 10)\n          .attr(\"height\", 10)\n          .attr(\"class\", \"vehicle\")\n          .attr(\"id\", (d) => d.id);\n\n        groupEnter\n          .append(\"text\")\n          .text((d) => d.id)\n          .attr(\"width\", 100)\n          .attr(\"x\", 0)\n          .attr(\"y\", 450)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", 5);\n\n        groupEnter\n          .append(\"text\")\n          .text((d) => d.currentStatus)\n          .attr(\"width\", 100)\n          .attr(\"x\", 0)\n          .attr(\"y\", 460)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", 5)\n          .attr(\"class\", \"current-status\");\n      },\n      (update) => {\n        update.attr(\"class\", \"updated\");\n      },\n      (exit) => {\n          exit.selectAll(\".current-status\") // Select the text element within the exit selection\n            .transition() // Apply a transition for smooth removal\n            .duration(500) // Set the duration of the transition\n            .style(\"opacity\", 0) // Fade out the text element\n            .remove(); // Remove the text element\n\n          exit.selectAll(\".vehicle\") // Select the rect element within the exit selection\n            .transition() // Apply a transition for smooth removal\n            .duration(500) // Set the duration of the transition\n            .style(\"opacity\", 0) // Fade out the rect element\n            .remove(); // Remove the rect element\n\n          exit.remove(); // Remove the entire vehicle-group element\n      }\n      \n    );\n}\n\nexport default Vehicles;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}