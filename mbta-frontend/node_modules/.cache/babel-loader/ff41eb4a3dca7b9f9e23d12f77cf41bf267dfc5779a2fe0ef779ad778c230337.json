{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport { Line, Chart } from 'react-chartjs-2';\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Red\";\nvar mbtaStopsEndpoint = \"/stops/line/Red\";\nfunction Map() {\n  _s();\n  const bostonBoundaries = {\n    \"westernBoundary\": -71.191,\n    \"easternBoundary\": -70.746,\n    \"southernBoundary\": 42.184,\n    \"northernBoundary\": 42.402\n  };\n  function createSVGMap() {\n    addStops();\n  }\n  const [event, setEvent] = useState(\"hi\");\n  //Load stops here\n  //Load lines here\n\n  //Load vehicles below\n  // useEffect(() => {\n  //   const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n  //   evtSource.onmessage = (data) => {\n  //     setEvent(data.data);\n  //   };\n  //   evtSource.onerror = function (error) {\n  //     console.error('EventSource error:', error);\n  //   };\n  //   //close out event subscription on close of component\n  // },[]);\n\n  function addStops() {\n    let xhr = new XMLHttpRequest();\n\n    // Making our connection \n    var url = backendHost + controllerEndpoint + mbtaStopsEndpoint;\n    xhr.open(\"GET\", url, true);\n\n    // function execute after request is successful\n    xhr.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        console.log(this.responseText);\n      }\n      // xhr.onerror = function (error){\n      //   console.error(error);\n      // };\n      // Sending request\n      xhr.send();\n      var svg = d3.select(\"svg\");\n      var stops = svg.selectAll(\"g.stops\").data;\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"1000\",\n      width: \"1000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), createSVGMap(), \"        \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"a9TXpawgF4Cv/jHtTFUxe4fbXtk=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["Line","Chart","useState","useEffect","d3","jsxDEV","_jsxDEV","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","Map","_s","bostonBoundaries","createSVGMap","addStops","event","setEvent","xhr","XMLHttpRequest","url","open","onreadystatechange","readyState","status","console","log","responseText","send","svg","select","stops","selectAll","data","className","children","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import { Line, Chart } from 'react-chartjs-2';\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Red\";\nvar mbtaStopsEndpoint = \"/stops/line/Red\"\nfunction Map() {\n    const bostonBoundaries = {\n      \"westernBoundary\" : -71.191,\n      \"easternBoundary\" : -70.746,\n      \"southernBoundary\" : 42.184,\n      \"northernBoundary\" : 42.402\n    };\n\n    function createSVGMap(){\n      addStops();\n    }\n\n    const[event, setEvent] = useState(\"hi\");\n    //Load stops here\n    //Load lines here\n\n    //Load vehicles below\n    // useEffect(() => {\n    //   const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n    //   evtSource.onmessage = (data) => {\n    //     setEvent(data.data);\n    //   };\n    //   evtSource.onerror = function (error) {\n    //     console.error('EventSource error:', error);\n    //   };\n    //   //close out event subscription on close of component\n    // },[]);\n\nfunction addStops(){\n  let xhr = new XMLHttpRequest();\n \n    // Making our connection \n    var url = backendHost + controllerEndpoint + mbtaStopsEndpoint;\n    xhr.open(\"GET\", url, true);\n \n    // function execute after request is successful\n    xhr.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n            console.log(this.responseText);\n        }\n    // xhr.onerror = function (error){\n    //   console.error(error);\n    // };\n    // Sending request\n    xhr.send();\n\n  var svg = d3.select(\"svg\");\n  var stops = svg.selectAll(\"g.stops\")\n  .data\n}\n\n}\n      return (\n        <div className=\"Map\">\n          <svg height=\"1000\" width=\"1000\"></svg>\n          {createSVGMap()}\n{/*          <h1>Recent Event is {event}</h1>\n*/}        </div> \n      );\n}\n\nexport default Map;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIzB,IAAIC,WAAW,GAAG,iBAAiB;AACnC,IAAIC,kBAAkB,GAAG,iBAAiB;AAC1C,IAAIC,kBAAkB,GAAG,uBAAuB;AAChD,IAAIC,iBAAiB,GAAG,iBAAiB;AACzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAMC,gBAAgB,GAAG;IACvB,iBAAiB,EAAG,CAAC,MAAM;IAC3B,iBAAiB,EAAG,CAAC,MAAM;IAC3B,kBAAkB,EAAG,MAAM;IAC3B,kBAAkB,EAAG;EACvB,CAAC;EAED,SAASC,YAAYA,CAAA,EAAE;IACrBC,QAAQ,CAAC,CAAC;EACZ;EAEA,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACvC;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEJ,SAASa,QAAQA,CAAA,EAAE;IACjB,IAAIG,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;;IAE5B;IACA,IAAIC,GAAG,GAAGb,WAAW,GAAGC,kBAAkB,GAAGE,iBAAiB;IAC9DQ,GAAG,CAACG,IAAI,CAAC,KAAK,EAAED,GAAG,EAAE,IAAI,CAAC;;IAE1B;IACAF,GAAG,CAACI,kBAAkB,GAAG,YAAY;MACjC,IAAI,IAAI,CAACC,UAAU,IAAI,CAAC,IAAI,IAAI,CAACC,MAAM,IAAI,GAAG,EAAE;QAC5CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,YAAY,CAAC;MAClC;MACJ;MACA;MACA;MACA;MACAT,GAAG,CAACU,IAAI,CAAC,CAAC;MAEZ,IAAIC,GAAG,GAAGzB,EAAE,CAAC0B,MAAM,CAAC,KAAK,CAAC;MAC1B,IAAIC,KAAK,GAAGF,GAAG,CAACG,SAAS,CAAC,SAAS,CAAC,CACnCC,IAAI;IACP,CAAC;EAED;EACM,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAK8B,MAAM,EAAC,MAAM;MAACC,KAAK,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACrC3B,YAAY,CAAC,CAAC,EAEtB,UAAQ;EAAA;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEjB;AAAC7B,EAAA,CA3DQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA6DZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}