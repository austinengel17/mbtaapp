{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport { Line, Chart } from 'react-chartjs-2';\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Red\";\nvar mbtaStopsEndpoint = \"/stops/line/Red\";\nfunction Map() {\n  _s();\n  console.log(\"#80\");\n  const bostonBoundaries = {\n    \"westernBoundary\": -71.191,\n    \"easternBoundary\": -70.746,\n    \"southernBoundary\": 42.184,\n    \"northernBoundary\": 42.402\n  };\n  function createSVGMap() {\n    console.log(\"#2\");\n    addStops();\n  }\n  const [event, setEvent] = useState(\"hi\");\n  //Load stops here\n  //Load lines here\n\n  //Load vehicles below\n  // useEffect(() => {\n  //   const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n  //   evtSource.onmessage = (data) => {\n  //     setEvent(data.data);\n  //   };\n  //   evtSource.onerror = function (error) {\n  //     console.error('EventSource error:', error);\n  //   };\n  //   //close out event subscription on close of component\n  // },[]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"1000\",\n      width: \"1000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), createSVGMap(), console.log(\"#3\"), \"        \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"a9TXpawgF4Cv/jHtTFUxe4fbXtk=\");\n_c = Map;\nfunction addStops() {\n  let xhr = new XMLHttpRequest();\n\n  // Making our connection \n  var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  xhr.open(\"GET\", url, true);\n\n  // function execute after request is successful\n  xhr.onreadystatechange = function () {\n    if (this.readyState == 4 && this.status == 200) {\n      console.log(JSON.parse(this.responseText));\n      // this.responseText\n      var stationData = JSON.parse(this.responseText);\n      console.log(stationData);\n      var svg = d3.select(\"svg\");\n      var stopGroup = svg.selectAll(\"g\").data(stationData).enter().attr(\"transform\", function (d, i) {\n        console.log(d);\n        return \"translate(\" + (10 + i * 130) + \", \" + 100 + \")\";\n      });\n      stopGroup.append(\"circle\").attr(\"cx\", 30).attr(\"cy\", 0).attr(\"r\", 10).attr(\"fill\", \"red\");\n    }\n  };\n  xhr.onerror = function (error) {\n    console.error(error);\n  };\n  xhr.send();\n  console.log(\"sent\");\n}\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["Line","Chart","useState","useEffect","d3","jsxDEV","_jsxDEV","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","Map","_s","console","log","bostonBoundaries","createSVGMap","addStops","event","setEvent","className","children","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","xhr","XMLHttpRequest","url","open","onreadystatechange","readyState","status","JSON","parse","responseText","stationData","svg","select","stopGroup","selectAll","data","enter","attr","d","i","append","onerror","error","send","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import { Line, Chart } from 'react-chartjs-2';\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Red\";\nvar mbtaStopsEndpoint = \"/stops/line/Red\"\nfunction Map() {    console.log(\"#80\");\n\n    const bostonBoundaries = {\n      \"westernBoundary\" : -71.191,\n      \"easternBoundary\" : -70.746,\n      \"southernBoundary\" : 42.184,\n      \"northernBoundary\" : 42.402\n    };\n\n    function createSVGMap(){\n    console.log(\"#2\");\n      addStops();\n    }\n\n    const[event, setEvent] = useState(\"hi\");\n    //Load stops here\n    //Load lines here\n\n    //Load vehicles below\n    // useEffect(() => {\n    //   const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n    //   evtSource.onmessage = (data) => {\n    //     setEvent(data.data);\n    //   };\n    //   evtSource.onerror = function (error) {\n    //     console.error('EventSource error:', error);\n    //   };\n    //   //close out event subscription on close of component\n    // },[]);\n\n      return (\n        <div className=\"Map\">\n          <svg height=\"1000\" width=\"1000\"></svg>\n          {createSVGMap()}\n          {console.log(\"#3\")}\n{/*          <h1>Recent Event is {event}</h1>\n*/}        </div> \n      );\n}\nfunction addStops(){\n  let xhr = new XMLHttpRequest();\n \n    // Making our connection \n    var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n    xhr.open(\"GET\", url, true);\n \n    // function execute after request is successful\n    xhr.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n            console.log(JSON.parse(this.responseText));\n            // this.responseText\n            var stationData = JSON.parse(this.responseText);\n            console.log(stationData);\n            var svg = d3.select(\"svg\");\n            var stopGroup = svg.selectAll(\"g\")\n            .data(stationData)\n            .enter()\n            .attr(\"transform\", function(d, i) { console.log(d); return \"translate(\" + (10 + i * 130) + \", \" + 100 + \")\"; });\n            stopGroup.append(\"circle\")\n              .attr(\"cx\", 30)\n              .attr(\"cy\", 0)\n              .attr(\"r\", 10)\n              .attr(\"fill\", \"red\");\n        }\n      }\n    xhr.onerror = function (error){\n      console.error(error);\n    };\n    xhr.send();\n    console.log(\"sent\");\n}\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}