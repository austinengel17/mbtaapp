{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport { Line, Chart } from 'react-chartjs-2';\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Red\";\nvar mbtaStopsEndpoint = \"/stops/line/Red\";\nfunction Map() {\n  _s();\n  const bostonBoundaries = {\n    \"westernBoundary\": -71.191,\n    \"easternBoundary\": -70.746,\n    \"southernBoundary\": 42.184,\n    \"northernBoundary\": 42.402\n  };\n  function createSVGMap() {\n    addStops();\n  }\n  const [event, setEvent] = useState(\"hi\");\n  //Load stops here\n  //Load lines here\n\n  //Load vehicles below\n  useEffect(() => {\n    const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n    evtSource.onmessage = data => {\n      setEvent(data.data);\n    };\n    evtSource.onerror = function (error) {\n      console.error('EventSource error:', error);\n    };\n    //close out event subscription on close of component\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"1000\",\n      width: \"1000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), createSVGMap(), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Recent Event is \", event]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"OLBBC44Jd//93K/9ozexQsziZ4A=\");\n_c = Map;\nfunction addStops() {\n  let xhr = new XMLHttpRequest();\n\n  // Making our connection \n  var url = backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  xhr.open(\"GET\", url, true);\n\n  // function execute after request is successful\n  xhr.onreadystatechange = function () {\n    if (this.readyState == 4 && this.status == 200) {\n      console.log(this.responseText);\n    }\n  };\n  // Sending our request\n  xhr.send();\n  var svg = d3.select(\"svg\");\n  var stops = svg.selectAll(\"g.stops\").data;\n}\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["Line","Chart","useState","useEffect","d3","jsxDEV","_jsxDEV","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","Map","_s","bostonBoundaries","createSVGMap","addStops","event","setEvent","evtSource","EventSource","onmessage","data","onerror","error","console","className","children","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","xhr","XMLHttpRequest","url","open","onreadystatechange","readyState","status","log","responseText","send","svg","select","stops","selectAll","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import { Line, Chart } from 'react-chartjs-2';\nimport { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Red\";\nvar mbtaStopsEndpoint = \"/stops/line/Red\"\nfunction Map() {\n    const bostonBoundaries = {\n      \"westernBoundary\" : -71.191,\n      \"easternBoundary\" : -70.746,\n      \"southernBoundary\" : 42.184,\n      \"northernBoundary\" : 42.402\n    };\n\n    function createSVGMap(){\n      addStops();\n    }\n\n    const[event, setEvent] = useState(\"hi\");\n    //Load stops here\n    //Load lines here\n\n    //Load vehicles below\n    useEffect(() => {\n      const evtSource = new EventSource(\"http://\" + backendHost + controllerEndpoint + vehiclePositionSub);\n      evtSource.onmessage = (data) => {\n        setEvent(data.data);\n      };\n      evtSource.onerror = function (error) {\n        console.error('EventSource error:', error);\n      };\n      //close out event subscription on close of component\n    },[]);\n\n\n      return (\n        <div className=\"Map\">\n          <svg height=\"1000\" width=\"1000\"></svg>\n          {createSVGMap()}\n          <h1>Recent Event is {event}</h1>\n        </div> \n      );\n}\n\n\nfunction addStops(){\n  let xhr = new XMLHttpRequest();\n \n    // Making our connection \n    var url = backendHost + controllerEndpoint + mbtaStopsEndpoint;\n    xhr.open(\"GET\", url, true);\n \n    // function execute after request is successful\n    xhr.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n            console.log(this.responseText);\n        }\n    }\n    // Sending our request\n    xhr.send();\n\n  var svg = d3.select(\"svg\");\n  var stops = svg.selectAll(\"g.stops\")\n  .data\n\n}\n\nexport default Map;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIzB,IAAIC,WAAW,GAAG,iBAAiB;AACnC,IAAIC,kBAAkB,GAAG,iBAAiB;AAC1C,IAAIC,kBAAkB,GAAG,uBAAuB;AAChD,IAAIC,iBAAiB,GAAG,iBAAiB;AACzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAMC,gBAAgB,GAAG;IACvB,iBAAiB,EAAG,CAAC,MAAM;IAC3B,iBAAiB,EAAG,CAAC,MAAM;IAC3B,kBAAkB,EAAG,MAAM;IAC3B,kBAAkB,EAAG;EACvB,CAAC;EAED,SAASC,YAAYA,CAAA,EAAE;IACrBC,QAAQ,CAAC,CAAC;EACZ;EAEA,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACvC;EACA;;EAEA;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,IAAIC,WAAW,CAAC,SAAS,GAAGZ,WAAW,GAAGC,kBAAkB,GAAGC,kBAAkB,CAAC;IACpGS,SAAS,CAACE,SAAS,GAAIC,IAAI,IAAK;MAC9BJ,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;IACrB,CAAC;IACDH,SAAS,CAACI,OAAO,GAAG,UAAUC,KAAK,EAAE;MACnCC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC;IACD;EACF,CAAC,EAAC,EAAE,CAAC;EAGH,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAKqB,MAAM,EAAC,MAAM;MAACC,KAAK,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACrClB,YAAY,CAAC,CAAC,eACfR,OAAA;MAAAoB,QAAA,GAAI,kBAAgB,EAACV,KAAK;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd;AAACpB,EAAA,CApCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAuCZ,SAASI,QAAQA,CAAA,EAAE;EACjB,IAAImB,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;;EAE5B;EACA,IAAIC,GAAG,GAAG7B,WAAW,GAAGC,kBAAkB,GAAGE,iBAAiB;EAC9DwB,GAAG,CAACG,IAAI,CAAC,KAAK,EAAED,GAAG,EAAE,IAAI,CAAC;;EAE1B;EACAF,GAAG,CAACI,kBAAkB,GAAG,YAAY;IACjC,IAAI,IAAI,CAACC,UAAU,IAAI,CAAC,IAAI,IAAI,CAACC,MAAM,IAAI,GAAG,EAAE;MAC5ChB,OAAO,CAACiB,GAAG,CAAC,IAAI,CAACC,YAAY,CAAC;IAClC;EACJ,CAAC;EACD;EACAR,GAAG,CAACS,IAAI,CAAC,CAAC;EAEZ,IAAIC,GAAG,GAAGxC,EAAE,CAACyC,MAAM,CAAC,KAAK,CAAC;EAC1B,IAAIC,KAAK,GAAGF,GAAG,CAACG,SAAS,CAAC,SAAS,CAAC,CACnC1B,IAAI;AAEP;AAEA,eAAeV,GAAG;AAAC,IAAAsB,EAAA;AAAAe,YAAA,CAAAf,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}