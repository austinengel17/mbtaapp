{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport Draw from './draw.js';\nimport Vehicles from './Vehicles.js';\nimport LineDropdown from './LineDropdown.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const svgRef = useRef(null);\n  const [stationData, setStationData] = useState(null);\n  const [stationMapping, setStationMapping] = useState(null);\n  const [selectedLine, setSelectedLine] = useState(\"Green-E\");\n  const [dataReady, setDataReady] = useState(false);\n  var backendHost = \"localhost:8080/\";\n  var controllerEndpoint = \"mbta/v1/livemap\";\n  var vehiclePositionSub = \"/vehicle/location/\" + selectedLine;\n  var mbtaStopsEndpoint = \"/stops/line/\" + selectedLine;\n  var stationMappingEndpoint = \"/stops/child-parent-relation\";\n  const options = [\n  //{ value: 'Green-A', label: 'Green-A' },\n  //{ value: 'Green-B', label: 'Green-B' }, closed line \n  {\n    value: 'Green-C',\n    label: 'Green-C'\n  }, {\n    value: 'Green-D',\n    label: 'Green-D'\n  }, {\n    value: 'Green-E',\n    label: 'Green-E'\n  }];\n  useEffect(() => {\n    setDataReady(false);\n    ////////////////////////////////////////////////////////////\n    var xhr = new XMLHttpRequest(); //\n    // Making our connection \n    var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n    xhr.open(\"GET\", url, true);\n\n    // function execute after request is successful\n    xhr.onreadystatechange = function () {\n      console.log(\"hi\");\n      if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        var stationDataTemp = Object.keys(temp).map(v => ({\n          [v.replace(/['\"]+/g, '')]: {\n            ...temp[v]\n          }\n        }));\n        console.log(stationDataTemp);\n        setStationData(stationDataTemp);\n      }\n    };\n    xhr.onerror = function (error) {\n      console.error(error);\n    };\n    xhr.send();\n    console.log(\"sent #1\");\n\n    ///////////////////////////////////////////\n    var xhr2 = new XMLHttpRequest();\n    // Making our connection \n    var url2 = \"http://\" + backendHost + controllerEndpoint + stationMappingEndpoint;\n    xhr2.open(\"GET\", url2, true);\n    // function execute after request is successful\n    xhr2.onreadystatechange = function () {\n      console.log(\"hi\");\n      if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        console.log(\"mapping .. :\", temp);\n        setStationMapping(temp);\n      }\n    };\n    xhr2.onerror = function (error) {\n      console.error(error);\n    };\n    xhr2.send();\n    console.log(\"sent #2\");\n    /////////////////////////\n  }, [selectedLine]);\n  useEffect(() => {\n    if (stationData != null && stationMapping != null) {\n      setDataReady(true);\n    }\n  }, [stationData, stationMapping]);\n  const handleChange = selectedOption => {\n    setSelectedLine(selectedOption.value);\n    console.log(`Option selected:`, selectedOption.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: [dataReady && options != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        height: \"500\",\n        width: \"2000\",\n        ref: svgRef,\n        children: [/*#__PURE__*/_jsxDEV(Draw, {\n          stationData: stationData,\n          svgRef: svgRef,\n          selectedLine: selectedLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Vehicles, {\n          svgRef: svgRef,\n          stationData: stationData,\n          stationMapping: stationMapping,\n          selectedLine: selectedLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"tYcRDO4cj64RzVSUgkkXfHKCmFM=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useState","useEffect","useRef","d3","Draw","Vehicles","LineDropdown","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","_s","svgRef","stationData","setStationData","stationMapping","setStationMapping","selectedLine","setSelectedLine","dataReady","setDataReady","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","stationMappingEndpoint","options","value","label","xhr","XMLHttpRequest","url","open","onreadystatechange","console","log","readyState","status","temp","JSON","parse","responseText","stationDataTemp","Object","keys","map","v","replace","onerror","error","send","xhr2","url2","handleChange","selectedOption","className","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","ref","onChange","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport Draw from'./draw.js';\nimport Vehicles from'./Vehicles.js';\nimport LineDropdown from'./LineDropdown.js';\nimport Select from 'react-select';\n\n\nfunction Map() { \n  const svgRef = useRef(null);\n  const [stationData, setStationData] = useState(null);\n  const [stationMapping, setStationMapping] = useState(null);\n  const [selectedLine, setSelectedLine] = useState(\"Green-E\");\n  const [dataReady, setDataReady] = useState(false);\n\n  var backendHost = \"localhost:8080/\";\n  var controllerEndpoint = \"mbta/v1/livemap\";\n  var vehiclePositionSub = \"/vehicle/location/\" + selectedLine;\n  var mbtaStopsEndpoint = \"/stops/line/\" + selectedLine;\n  var stationMappingEndpoint = \"/stops/child-parent-relation\";\n  const options = [\n    //{ value: 'Green-A', label: 'Green-A' },\n    //{ value: 'Green-B', label: 'Green-B' }, closed line \n    { value: 'Green-C', label: 'Green-C' }, \n    { value: 'Green-D', label: 'Green-D' }, \n    { value: 'Green-E', label: 'Green-E' }\n  ];\n\nuseEffect(()=>{\nsetDataReady(false);\n////////////////////////////////////////////////////////////\n  var xhr = new XMLHttpRequest();//\n    // Making our connection \n  var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  xhr.open(\"GET\", url, true);\n \n    // function execute after request is successful\n  xhr.onreadystatechange = function () {\n    console.log(\"hi\");\n    if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        var stationDataTemp = Object.keys(temp).map(v => ({[v.replace(/['\"]+/g, '')]: {...temp[v]}}));\n        console.log(stationDataTemp);\n        setStationData(stationDataTemp);     \n    }\n  }\n  xhr.onerror = function (error){\n      console.error(error);\n    };\n  xhr.send();\n  console.log(\"sent #1\");\n\n///////////////////////////////////////////\n  var xhr2 = new XMLHttpRequest();\n    // Making our connection \n  var url2 = \"http://\" + backendHost + controllerEndpoint + stationMappingEndpoint;\n  xhr2.open(\"GET\", url2, true);\n    // function execute after request is successful\n  xhr2.onreadystatechange = function () {\n    console.log(\"hi\");\n    if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        console.log(\"mapping .. :\", temp);\n        setStationMapping(temp);      \n    }\n  }\n  xhr2.onerror = function (error){\n      console.error(error);\n    };\n  xhr2.send();\n  console.log(\"sent #2\");\n/////////////////////////\n},[selectedLine]);\n\nuseEffect(()=>{\n  if(stationData != null && stationMapping != null){\n    setDataReady(true);\n  }\n}, [stationData, stationMapping]);\n  const handleChange = (selectedOption) => {\n    setSelectedLine(selectedOption.value);\n    console.log(`Option selected:`, selectedOption.value);\n  };\n\n\n  return (\n    <div className=\"Map\">\n    {dataReady && options != null ? (\n      <>\n      <h2>{selectedLine}</h2>\n      <svg height=\"500\" width=\"2000\" ref={svgRef} >\n        <Draw stationData={stationData} svgRef={svgRef} selectedLine={selectedLine}/>\n        <Vehicles svgRef={svgRef} stationData={stationData} stationMapping={stationMapping} selectedLine={selectedLine}/>\n      </svg>\n      </>\n    ) : (<div>Loading...</div>)\n    }\n      <Select options={options} onChange={handleChange}/>\n    </div> \n  );\n\n}\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}