{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nfunction Draw() {\n  var xhr = new XMLHttpRequest();\n\n  // Making our connection \n  var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  xhr.open(\"GET\", url, true);\n\n  // function execute after request is successful\n  xhr.onreadystatechange = function () {\n    if (this.readyState == 4 && this.status == 200) {\n      console.log(JSON.parse(this.responseText));\n      var splitStationLocation;\n      var temp = JSON.parse(this.responseText);\n      var stationData = Object.keys(temp).map(v => ({\n        [v.replace(/['\"]+/g, '')]: {\n          ...temp[v]\n        }\n      }));\n      var lineYAxis = 150;\n      var circleRadius = 2;\n      console.log(stationData);\n      var svg = d3.select(\"svg\");\n      var stopGroup = svg.selectAll(\"g\").data(stationData).enter().append(\"g\").attr(\"transform\", function (d, i) {\n        return \"translate(\" + (30 + i * 40) + \", \" + lineYAxis + \")\";\n      });\n      stopGroup.append(\"circle\").attr(\"cx\", 0).attr(\"cy\", 0).attr(\"r\", circleRadius).attr(\"fill\", \"red\").attr(\"class\", d => Object.keys(d)[0]);\n      stopGroup.append(\"text\").text(function (d) {\n        return d[Object.keys(d)[0]].name;\n      }).attr(\"width\", 100).attr(\"x\", 0) // Set the x-coordinate\n      .attr(\"y\", -10).attr(\"text-anchor\", \"middle\").attr(\"font-size\", 5);\n      var stops = svg.selectAll(\"circle\").nodes();\n      for (var i = 0; i < stops.length - 2; i++) {\n        var node1 = stops[i];\n        var node2 = stops[i + 1];\n        var circlePosition1 = stops[i].getBoundingClientRect().left + window.pageXOffset;\n        var circlePosition2 = stops[i + 1].getBoundingClientRect().top + window.pageYOffset;\n        svg.append(\"line\")\n        // .attr(\"x1\", -circlePosition1.x + circleRadius/2)\n        .attr(\"x1\", -circlePosition1.x).attr(\"y1\", 150).attr(\"x2\", circlePosition2.x).attr(\"y2\", 150).attr(\"stroke\", \"green\").attr(\"stroke-width\", 1);\n        console.log(\"Circle absolute position:\", node1.r);\n        console.log(stops[i]);\n      }\n      // stopGroup.each(function(d) {\n      //     var circle = d3.select(this).select(\"circle\");\n      //     var circleNode = circle.node();\n      //     var circlePosition = circleNode.getBoundingClientRect();\n\n      //     svg.append(\"line\")\n      //     .attr(\"x1\", circlePosition.x)\n      //     .attr(\"y1\", circlePosition.y)\n      //     .attr(\"stroke\", \"green\")\n      //     .attr(\"stroke-width\", 1);\n      //     console.log(\"Circle absolute position:\", circlePosition.x);\n      // });\n\n      // stops.each(function(d){\n      //   var stop = d3.select(this);\n      //   console.log(stop);\n      //   svg.append(\"line\")\n      //   .attr(\"x\", +stop.attr(\"cx\"))\n      //   .attr(\"y\", +stop.attr(\"cy\"))\n      //   .attr(\"stroke\", \"green\")\n      //   .attr(\"stroke-width\", 1);\n      // });\n    }\n    // appendRouteLines();\n  };\n\n  xhr.onerror = function (error) {\n    console.error(error);\n  };\n  xhr.send();\n  console.log(\"sent\");\n}\n\n// function appendRouteLines(){\n//     var stops = svg.selectAll(\"g\");\n\n// }\n_c = Draw;\nexport default Draw;\nvar _c;\n$RefreshReg$(_c, \"Draw\");","map":{"version":3,"names":["useState","useEffect","d3","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","Draw","xhr","XMLHttpRequest","url","open","onreadystatechange","readyState","status","console","log","JSON","parse","responseText","splitStationLocation","temp","stationData","Object","keys","map","v","replace","lineYAxis","circleRadius","svg","select","stopGroup","selectAll","data","enter","append","attr","d","i","text","name","stops","nodes","length","node1","node2","circlePosition1","getBoundingClientRect","left","window","pageXOffset","circlePosition2","top","pageYOffset","x","r","onerror","error","send","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/draw.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nfunction Draw() {\n   var xhr = new XMLHttpRequest();\n \n    // Making our connection \n    var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n    xhr.open(\"GET\", url, true);\n \n    // function execute after request is successful\n    xhr.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n            console.log(JSON.parse(this.responseText));\n            var splitStationLocation;\n            var temp = JSON.parse(this.responseText);\n            var stationData = Object.keys(temp).map(v => ({[v.replace(/['\"]+/g, '')]: {...temp[v]}}));\n            var lineYAxis = 150;\n            var circleRadius = 2;\n            console.log(stationData);\n            var svg = d3.select(\"svg\");\n            var stopGroup = svg.selectAll(\"g\")\n            .data(stationData)\n            .enter()\n            .append(\"g\")\n            .attr(\"transform\", function(d, i) {\n                return \"translate(\" + (30 + i * 40) + \", \" + (lineYAxis) + \")\";\n            });\n            stopGroup.append(\"circle\")\n              .attr(\"cx\", 0)\n              .attr(\"cy\", 0)\n              .attr(\"r\", circleRadius)\n              .attr(\"fill\", \"red\")\n              .attr(\"class\", d=>Object.keys(d)[0]);\n\n             stopGroup.append(\"text\")\n                .text(function(d) {\n                  return d[Object.keys(d)[0]].name;})\n                .attr(\"width\", 100)\n                .attr(\"x\", 0) // Set the x-coordinate\n                .attr(\"y\", -10)\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"font-size\", 5);\n            var stops = svg.selectAll(\"circle\").nodes();\n             \n            for(var i = 0; i < stops.length-2; i++){\n              var node1 = stops[i];\n              var node2 = stops[i+1];\n              var circlePosition1 = stops[i].getBoundingClientRect().left + window.pageXOffset;\n              var circlePosition2 = stops[i+1].getBoundingClientRect().top + window.pageYOffset;\n\n              svg.append(\"line\")\n              // .attr(\"x1\", -circlePosition1.x + circleRadius/2)\n                            .attr(\"x1\", -circlePosition1.x)\n\n              .attr(\"y1\", 150)\n              .attr(\"x2\", circlePosition2.x)\n              .attr(\"y2\", 150)\n              .attr(\"stroke\", \"green\")\n              .attr(\"stroke-width\", 1);\n\n              console.log(\"Circle absolute position:\", node1.r);\n              console.log(stops[i]);\n            }\n            // stopGroup.each(function(d) {\n            //     var circle = d3.select(this).select(\"circle\");\n            //     var circleNode = circle.node();\n            //     var circlePosition = circleNode.getBoundingClientRect();\n\n            //     svg.append(\"line\")\n            //     .attr(\"x1\", circlePosition.x)\n            //     .attr(\"y1\", circlePosition.y)\n            //     .attr(\"stroke\", \"green\")\n            //     .attr(\"stroke-width\", 1);\n            //     console.log(\"Circle absolute position:\", circlePosition.x);\n            // });\n\n\n\n            // stops.each(function(d){\n            //   var stop = d3.select(this);\n            //   console.log(stop);\n            //   svg.append(\"line\")\n            //   .attr(\"x\", +stop.attr(\"cx\"))\n            //   .attr(\"y\", +stop.attr(\"cy\"))\n            //   .attr(\"stroke\", \"green\")\n            //   .attr(\"stroke-width\", 1);\n            // });\n        }\n        // appendRouteLines();\n      };\n    xhr.onerror = function (error){\n      console.error(error);\n    };\n    xhr.send();\n    console.log(\"sent\");\n}\n\n// function appendRouteLines(){\n//     var stops = svg.selectAll(\"g\");\n      \n// }\n\nexport default Draw;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}