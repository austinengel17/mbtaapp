{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport Draw from './draw.js';\nimport Vehicles from './Vehicles.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nfunction Map() {\n  _s();\n  const svgRef = useRef(null);\n  const [stationData, setStationData] = useState(null);\n  var xhr = new XMLHttpRequest();\n\n  // Making our connection \n  var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  xhr.open(\"GET\", url, true);\n\n  // function execute after request is successful\n  xhr.onreadystatechange = function () {\n    console.log(\"hi\");\n    if (this.readyState == 4 && this.status == 200) {\n      var temp = JSON.parse(this.responseText);\n      var stationDataTemp = Object.keys(temp).map(v => ({\n        [v.replace(/['\"]+/g, '')]: {\n          ...temp[v]\n        }\n      }));\n      console.log(stationDataTemp);\n      setStationData(stationDataTemp);\n    }\n  };\n  if (stationData == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"2000\",\n      width: \"2000\",\n      ref: svgRef,\n      children: [/*#__PURE__*/_jsxDEV(Draw, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Vehicles, {\n        svgRef: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n_s(Map, \"8KnGzrPB1+yLNGOD8gkYt0N8TfQ=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useState","useEffect","useRef","d3","Draw","Vehicles","jsxDEV","_jsxDEV","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","Map","_s","svgRef","stationData","setStationData","xhr","XMLHttpRequest","url","open","onreadystatechange","console","log","readyState","status","temp","JSON","parse","responseText","stationDataTemp","Object","keys","map","v","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","className","height","width","ref","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport Draw from'./draw.js';\nimport Vehicles from'./Vehicles.js';\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nfunction Map() { \n  const svgRef = useRef(null);\n  const [stationData, setStationData] = useState(null);\n\n  var xhr = new XMLHttpRequest();\n \n    // Making our connection \n  var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  xhr.open(\"GET\", url, true);\n \n    // function execute after request is successful\n  xhr.onreadystatechange = function () {\n    console.log(\"hi\");\n    if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        var stationDataTemp = Object.keys(temp).map(v => ({[v.replace(/['\"]+/g, '')]: {...temp[v]}}));\n        console.log(stationDataTemp);\n        setStationData(stationDataTemp);     \n    }\n  }\n    if(stationData == null){\n      return(<div>Loading...</div>);\n    }\n    return (\n      <div className=\"Map\">\n        <svg height=\"2000\" width=\"2000\" ref={svgRef} >\n        <Draw />\n        <Vehicles svgRef={svgRef} />\n        </svg>\n      </div> \n    );\n}\n\nexport default Map;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,IAAI,MAAK,WAAW;AAC3B,OAAOC,QAAQ,MAAK,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,IAAIC,WAAW,GAAG,iBAAiB;AACnC,IAAIC,kBAAkB,GAAG,iBAAiB;AAC1C,IAAIC,kBAAkB,GAAG,2BAA2B;AACpD,IAAIC,iBAAiB,GAAG,qBAAqB;AAC7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEpD,IAAIiB,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;;EAE5B;EACF,IAAIC,GAAG,GAAG,SAAS,GAAGX,WAAW,GAAGC,kBAAkB,GAAGE,iBAAiB;EAC1EM,GAAG,CAACG,IAAI,CAAC,KAAK,EAAED,GAAG,EAAE,IAAI,CAAC;;EAExB;EACFF,GAAG,CAACI,kBAAkB,GAAG,YAAY;IACnCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,IAAI,IAAI,CAACC,UAAU,IAAI,CAAC,IAAI,IAAI,CAACC,MAAM,IAAI,GAAG,EAAE;MAC5C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;MACxC,IAAIC,eAAe,GAAGC,MAAM,CAACC,IAAI,CAACN,IAAI,CAAC,CAACO,GAAG,CAACC,CAAC,KAAK;QAAC,CAACA,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG;UAAC,GAAGT,IAAI,CAACQ,CAAC;QAAC;MAAC,CAAC,CAAC,CAAC;MAC7FZ,OAAO,CAACC,GAAG,CAACO,eAAe,CAAC;MAC5Bd,cAAc,CAACc,eAAe,CAAC;IACnC;EACF,CAAC;EACC,IAAGf,WAAW,IAAI,IAAI,EAAC;IACrB,oBAAOR,OAAA;MAAA6B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EACA,oBACEjC,OAAA;IAAKkC,SAAS,EAAC,KAAK;IAAAL,QAAA,eAClB7B,OAAA;MAAKmC,MAAM,EAAC,MAAM;MAACC,KAAK,EAAC,MAAM;MAACC,GAAG,EAAE9B,MAAO;MAAAsB,QAAA,gBAC5C7B,OAAA,CAACH,IAAI;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRjC,OAAA,CAACF,QAAQ;QAACS,MAAM,EAAEA;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAAC3B,EAAA,CA/BQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}