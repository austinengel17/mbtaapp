{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport Draw from './draw.js';\nimport Vehicles from './Vehicles.js';\nimport LineDropdown from './LineDropdown.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nvar stationMappingEndpoint = \"/stops/child-parent-relation\";\nfunction Map() {\n  _s();\n  const svgRef = useRef(null);\n  const [stationData, setStationData] = useState(null);\n  const [stationMapping, setStationMapping] = useState(null);\n  const [selectedLine, setSelectedLine] = useState(null);\n  const options = [{\n    value: 'apple',\n    label: 'Apple'\n  }, {\n    value: 'banana',\n    label: 'Banana'\n  }, {\n    value: 'orange',\n    label: 'Orange'\n  }];\n  useEffect(() => {\n    ////////////////////////////////////////////////////////////\n    var xhr = new XMLHttpRequest();\n    // Making our connection \n    var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n    xhr.open(\"GET\", url, true);\n\n    // function execute after request is successful\n    xhr.onreadystatechange = function () {\n      console.log(\"hi\");\n      if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        var stationDataTemp = Object.keys(temp).map(v => ({\n          [v.replace(/['\"]+/g, '')]: {\n            ...temp[v]\n          }\n        }));\n        // console.log(stationDataTemp);\n        setStationData(stationDataTemp);\n      }\n    };\n    xhr.onerror = function (error) {\n      console.error(error);\n    };\n    xhr.send();\n    console.log(\"sent #1\");\n\n    ///////////////////////////////////////////\n    var xhr2 = new XMLHttpRequest();\n    // Making our connection \n    var url2 = \"http://\" + backendHost + controllerEndpoint + stationMappingEndpoint;\n    xhr2.open(\"GET\", url2, true);\n    // function execute after request is successful\n    xhr2.onreadystatechange = function () {\n      console.log(\"hi\");\n      if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        console.log(\"mapping .. :\", temp);\n        setStationMapping(temp);\n      }\n    };\n    xhr2.onerror = function (error) {\n      console.error(error);\n    };\n    xhr2.send();\n    console.log(\"sent #2\");\n    /////////////////////////\n  }, []);\n  const handleChange = selectedOption => {\n    setSelectedLine(selectedOption);\n    console.log(`Option selected:`, selectedOption);\n  };\n  if (stationData == null || stationMapping == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"tDYRAdCxcxeNNcL+DWXAUhcBoms=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useState","useEffect","useRef","d3","Draw","Vehicles","LineDropdown","Select","jsxDEV","_jsxDEV","backendHost","controllerEndpoint","vehiclePositionSub","mbtaStopsEndpoint","stationMappingEndpoint","Map","_s","svgRef","stationData","setStationData","stationMapping","setStationMapping","selectedLine","setSelectedLine","options","value","label","xhr","XMLHttpRequest","url","open","onreadystatechange","console","log","readyState","status","temp","JSON","parse","responseText","stationDataTemp","Object","keys","map","v","replace","onerror","error","send","xhr2","url2","handleChange","selectedOption","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","_c","$RefreshReg$"],"sources":["/Users/austin/Dev Projects/mbtaapp/mbta-frontend/src/Map.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport Draw from'./draw.js';\nimport Vehicles from'./Vehicles.js';\nimport LineDropdown from'./LineDropdown.js';\nimport Select from 'react-select';\n\n\nvar backendHost = \"localhost:8080/\";\nvar controllerEndpoint = \"mbta/v1/livemap\";\nvar vehiclePositionSub = \"/vehicle/location/Green-E\";\nvar mbtaStopsEndpoint = \"/stops/line/Green-E\";\nvar stationMappingEndpoint = \"/stops/child-parent-relation\";\nfunction Map() { \n  const svgRef = useRef(null);\n  const [stationData, setStationData] = useState(null);\n  const [stationMapping, setStationMapping] = useState(null);\n  const [selectedLine, setSelectedLine] = useState(null);\n  const options = [\n    { value: 'apple', label: 'Apple' },\n    { value: 'banana', label: 'Banana' },\n    { value: 'orange', label: 'Orange' }\n  ];\n\nuseEffect(()=>{\n////////////////////////////////////////////////////////////\n  var xhr = new XMLHttpRequest();\n    // Making our connection \n  var url = \"http://\" + backendHost + controllerEndpoint + mbtaStopsEndpoint;\n  xhr.open(\"GET\", url, true);\n \n    // function execute after request is successful\n  xhr.onreadystatechange = function () {\n    console.log(\"hi\");\n    if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        var stationDataTemp = Object.keys(temp).map(v => ({[v.replace(/['\"]+/g, '')]: {...temp[v]}}));\n        // console.log(stationDataTemp);\n        setStationData(stationDataTemp);     \n    }\n  }\n  xhr.onerror = function (error){\n      console.error(error);\n    };\n  xhr.send();\n  console.log(\"sent #1\");\n\n///////////////////////////////////////////\n  var xhr2 = new XMLHttpRequest();\n    // Making our connection \n  var url2 = \"http://\" + backendHost + controllerEndpoint + stationMappingEndpoint;\n  xhr2.open(\"GET\", url2, true);\n    // function execute after request is successful\n  xhr2.onreadystatechange = function () {\n    console.log(\"hi\");\n    if (this.readyState == 4 && this.status == 200) {\n        var temp = JSON.parse(this.responseText);\n        console.log(\"mapping .. :\", temp);\n        setStationMapping(temp);      \n    }\n  }\n  xhr2.onerror = function (error){\n      console.error(error);\n    };\n  xhr2.send();\n  console.log(\"sent #2\");\n/////////////////////////\n},[]);\n\n  const handleChange = (selectedOption) => {\n    setSelectedLine(selectedOption);\n    console.log(`Option selected:`, selectedOption);\n  };\n\n\n  if(stationData == null || stationMapping == null){\n    return(<div>Loading...</div>);\n  }\n  return (\n    <div className=\"Map\">\n      <Select options={options} onChange={handleChange}/>\n      {/*<svg height=\"2000\" width=\"2000\" ref={svgRef} >\n      <Draw stationData={stationData} svgRef={svgRef} />\n      <Vehicles svgRef={svgRef} stationData={stationData} stationMapping={stationMapping}/>\n      </svg>*/}\n    </div> \n  );\n\n}\n\nexport default Map;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,IAAI,MAAK,WAAW;AAC3B,OAAOC,QAAQ,MAAK,eAAe;AACnC,OAAOC,YAAY,MAAK,mBAAmB;AAC3C,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,IAAIC,WAAW,GAAG,iBAAiB;AACnC,IAAIC,kBAAkB,GAAG,iBAAiB;AAC1C,IAAIC,kBAAkB,GAAG,2BAA2B;AACpD,IAAIC,iBAAiB,GAAG,qBAAqB;AAC7C,IAAIC,sBAAsB,GAAG,8BAA8B;AAC3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMwB,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,CACrC;EAEHzB,SAAS,CAAC,MAAI;IACd;IACE,IAAI0B,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;IAC5B;IACF,IAAIC,GAAG,GAAG,SAAS,GAAGnB,WAAW,GAAGC,kBAAkB,GAAGE,iBAAiB;IAC1Ec,GAAG,CAACG,IAAI,CAAC,KAAK,EAAED,GAAG,EAAE,IAAI,CAAC;;IAExB;IACFF,GAAG,CAACI,kBAAkB,GAAG,YAAY;MACnCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB,IAAI,IAAI,CAACC,UAAU,IAAI,CAAC,IAAI,IAAI,CAACC,MAAM,IAAI,GAAG,EAAE;QAC5C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;QACxC,IAAIC,eAAe,GAAGC,MAAM,CAACC,IAAI,CAACN,IAAI,CAAC,CAACO,GAAG,CAACC,CAAC,KAAK;UAAC,CAACA,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG;YAAC,GAAGT,IAAI,CAACQ,CAAC;UAAC;QAAC,CAAC,CAAC,CAAC;QAC7F;QACAzB,cAAc,CAACqB,eAAe,CAAC;MACnC;IACF,CAAC;IACDb,GAAG,CAACmB,OAAO,GAAG,UAAUC,KAAK,EAAC;MAC1Bf,OAAO,CAACe,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC;IACHpB,GAAG,CAACqB,IAAI,CAAC,CAAC;IACVhB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;;IAExB;IACE,IAAIgB,IAAI,GAAG,IAAIrB,cAAc,CAAC,CAAC;IAC7B;IACF,IAAIsB,IAAI,GAAG,SAAS,GAAGxC,WAAW,GAAGC,kBAAkB,GAAGG,sBAAsB;IAChFmC,IAAI,CAACnB,IAAI,CAAC,KAAK,EAAEoB,IAAI,EAAE,IAAI,CAAC;IAC1B;IACFD,IAAI,CAAClB,kBAAkB,GAAG,YAAY;MACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB,IAAI,IAAI,CAACC,UAAU,IAAI,CAAC,IAAI,IAAI,CAACC,MAAM,IAAI,GAAG,EAAE;QAC5C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;QACxCP,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEG,IAAI,CAAC;QACjCf,iBAAiB,CAACe,IAAI,CAAC;MAC3B;IACF,CAAC;IACDa,IAAI,CAACH,OAAO,GAAG,UAAUC,KAAK,EAAC;MAC3Bf,OAAO,CAACe,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC;IACHE,IAAI,CAACD,IAAI,CAAC,CAAC;IACXhB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB;EACA,CAAC,EAAC,EAAE,CAAC;EAEH,MAAMkB,YAAY,GAAIC,cAAc,IAAK;IACvC7B,eAAe,CAAC6B,cAAc,CAAC;IAC/BpB,OAAO,CAACC,GAAG,CAAE,kBAAiB,EAAEmB,cAAc,CAAC;EACjD,CAAC;EAGD,IAAGlC,WAAW,IAAI,IAAI,IAAIE,cAAc,IAAI,IAAI,EAAC;IAC/C,oBAAOX,OAAA;MAAA4C,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EACA,oBACEhD,OAAA;IAAKiD,SAAS,EAAC,KAAK;IAAAL,QAAA,eAClB5C,OAAA,CAACF,MAAM;MAACiB,OAAO,EAAEA,OAAQ;MAACmC,QAAQ,EAAER;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKhD,CAAC;AAGV;AAACzC,EAAA,CA3EQD,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AA6EZ,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}